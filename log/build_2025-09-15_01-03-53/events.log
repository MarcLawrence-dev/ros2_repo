[0.000000] (-) TimerEvent: {}
[0.000128] (ydlidar_ros2_driver) JobQueued: {'identifier': 'ydlidar_ros2_driver', 'dependencies': OrderedDict()}
[0.000146] (ydlidar_sdk) JobQueued: {'identifier': 'ydlidar_sdk', 'dependencies': OrderedDict()}
[0.000157] (ydlidar_x3_ros) JobQueued: {'identifier': 'ydlidar_x3_ros', 'dependencies': OrderedDict()}
[0.000166] (ydlidar_ros2_driver) JobStarted: {'identifier': 'ydlidar_ros2_driver'}
[0.004407] (ydlidar_sdk) JobStarted: {'identifier': 'ydlidar_sdk'}
[0.006897] (ydlidar_x3_ros) JobStarted: {'identifier': 'ydlidar_x3_ros'}
[0.009953] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'cmake'}
[0.010199] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver', '-DAMENT_CMAKE_SYMLINK_INSTALL=1', '-DCMAKE_INSTALL_PREFIX=/home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[0.012501] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'cmake'}
[0.012724] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK', '-DCMAKE_INSTALL_PREFIX=/home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[0.016276] (ydlidar_x3_ros) JobProgress: {'identifier': 'ydlidar_x3_ros', 'progress': 'cmake'}
[0.016900] (ydlidar_x3_ros) Command: {'cmd': ['/usr/bin/cmake', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros', '-DAMENT_CMAKE_SYMLINK_INSTALL=1', '-DCMAKE_INSTALL_PREFIX=/home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[0.045525] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.054353] (ydlidar_sdk) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.056508] (ydlidar_x3_ros) StdoutLine: {'line': b'-- The C compiler identification is GNU 9.4.0\n'}
[0.077636] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.080385] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.089673] (ydlidar_x3_ros) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.091269] (ydlidar_sdk) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 9.4.0\n'}
[0.092418] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.095168] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.099680] (-) TimerEvent: {}
[0.121150] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.121944] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.133479] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.134348] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.134653] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.135148] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.165480] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.175213] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.175849] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.176075] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.176962] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.177388] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.183485] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.183723] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.184601] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.184803] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.185900] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.186312] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.199873] (-) TimerEvent: {}
[0.224672] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.225356] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.234259] (ydlidar_sdk) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.234533] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.235040] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.235136] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.273895] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.281172] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.281387] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.282426] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_cmake: 0.9.12 (/opt/ros/foxy/share/ament_cmake/cmake)\n'}
[0.283413] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.283579] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.291772] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.291969] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.293103] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found ament_cmake: 0.9.12 (/opt/ros/foxy/share/ament_cmake/cmake)\n'}
[0.293603] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.293922] (ydlidar_sdk) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.294560] (ydlidar_sdk) StdoutLine: {'line': b'-- Current platform: Linux\n'}
[0.295150] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:60 (cmake_policy):\n'}
[0.295278] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0053 will be removed from a future version\n'}
[0.295349] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.295413] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.295476] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.295537] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.295599] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.295659] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.295722] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.295785] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.295847] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:63 (cmake_policy):\n'}
[0.296000] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0037 will be removed from a future version\n'}
[0.296073] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.296138] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.296200] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.296271] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.296336] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.296483] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.296561] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.296625] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.296687] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at CMakeLists.txt:66 (cmake_policy):\n'}
[0.296748] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0043 will be removed from a future version\n'}
[0.296809] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.296869] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.296928] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.296987] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.297052] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.297114] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.297176] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.297237] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.297300] (ydlidar_sdk) StdoutLine: {'line': b'-- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) \n'}
[0.297368] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[0.297444] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.300064] (-) TimerEvent: {}
[0.307524] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") \n'}
[0.307681] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Using PYTHON_EXECUTABLE: /usr/bin/python3\n'}
[0.309539] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonInterp: /usr/bin/python3.8 (found version "3.8.10") \n'}
[0.317493] (ydlidar_sdk) StdoutLine: {'line': b'-- Found PythonLibs: /usr/lib/x86_64-linux-gnu/libpython3.8.so (found version "3.8.10") \n'}
[0.331934] (ydlidar_sdk) StdoutLine: {'line': b'-- Found GTest: /usr/lib/x86_64-linux-gnu/libgtest.a  \n'}
[0.389385] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Override CMake install command with custom implementation using symlinks instead of copying resources\n'}
[0.400288] (-) TimerEvent: {}
[0.400980] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rclcpp: 2.4.3 (/opt/ros/foxy/share/rclcpp/cmake)\n'}
[0.402316] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Override CMake install command with custom implementation using symlinks instead of copying resources\n'}
[0.415541] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found rclcpp: 2.4.3 (/opt/ros/foxy/share/rclcpp/cmake)\n'}
[0.425335] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.428717] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rosidl_adapter: 1.3.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)\n'}
[0.440192] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[0.443669] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found rosidl_adapter: 1.3.1 (/opt/ros/foxy/share/rosidl_adapter/cmake)\n'}
[0.472761] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[0.486749] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  \n'}
[0.489793] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/foxy/include  \n'}
[0.500492] (-) TimerEvent: {}
[0.506628] (ydlidar_sdk) StderrLine: {'line': b'CMake Deprecation Warning at cmake/install_package.cmake:101 (cmake_policy):\n'}
[0.506791] (ydlidar_sdk) StderrLine: {'line': b'  The OLD behavior for policy CMP0026 will be removed from a future version\n'}
[0.506868] (ydlidar_sdk) StderrLine: {'line': b'  of CMake.\n'}
[0.506937] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.507002] (ydlidar_sdk) StderrLine: {'line': b'  The cmake-policies(7) manual explains that the OLD behaviors of all\n'}
[0.507066] (ydlidar_sdk) StderrLine: {'line': b'  policies are deprecated and that a policy should be set to OLD only under\n'}
[0.507134] (ydlidar_sdk) StderrLine: {'line': b'  specific short-term circumstances.  Projects should be ported to the NEW\n'}
[0.507201] (ydlidar_sdk) StderrLine: {'line': b'  behavior and not rely on setting a policy to OLD.\n'}
[0.507266] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[0.507329] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:178 (install_package)\n'}
[0.507391] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.507453] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.507584] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/foxy/include  \n'}
[0.508213] (ydlidar_sdk) StderrLine: {'line': b'CMake Warning (dev) at cmake/install_package.cmake:191 (install):\n'}
[0.508304] (ydlidar_sdk) StderrLine: {'line': b'  Policy CMP0062 is not set: Disallow install() of export() result.  Run\n'}
[0.508373] (ydlidar_sdk) StderrLine: {'line': b'  "cmake --help-policy CMP0062" for policy details.  Use the cmake_policy\n'}
[0.508436] (ydlidar_sdk) StderrLine: {'line': b'  command to set the policy and suppress this warning.\n'}
[0.508497] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.508559] (ydlidar_sdk) StderrLine: {'line': b'  The file\n'}
[0.508618] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.508676] (ydlidar_sdk) StderrLine: {'line': b'    /home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk/ydlidar_sdkTargets.cmake\n'}
[0.508736] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.508795] (ydlidar_sdk) StderrLine: {'line': b'  was generated by the export() command.  It should not be installed with the\n'}
[0.508853] (ydlidar_sdk) StderrLine: {'line': b'  install() command.  Use the install(EXPORT) mechanism instead.  See the\n'}
[0.508912] (ydlidar_sdk) StderrLine: {'line': b'  cmake-packages(7) manual for more.\n'}
[0.508979] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.509038] (ydlidar_sdk) StderrLine: {'line': b'Call Stack (most recent call first):\n'}
[0.509096] (ydlidar_sdk) StderrLine: {'line': b'  CMakeLists.txt:178 (install_package)\n'}
[0.509155] (ydlidar_sdk) StderrLine: {'line': b'This warning is for project developers.  Use -Wno-dev to suppress it.\n'}
[0.509213] (ydlidar_sdk) StderrLine: {'line': b'\n'}
[0.514804] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[0.514935] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[0.514972] (ydlidar_sdk) StdoutLine: {'line': b'-- |         Resulting configuration for                             |\n'}
[0.515002] (ydlidar_sdk) StdoutLine: {'line': b'-- +===========================================================================+\n'}
[0.515032] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ PLATFORM _____________________________\n'}
[0.515061] (ydlidar_sdk) StdoutLine: {'line': b'--  Host                        : Linux5.15.0-139-genericx86_64\n'}
[0.515090] (ydlidar_sdk) StdoutLine: {'line': b'--  Is the system big endian?   :  No \n'}
[0.515119] (ydlidar_sdk) StdoutLine: {'line': b'--  Word size (32/64 bit)       : 64\n'}
[0.515147] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake version               : 3.16.3\n'}
[0.515175] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake generator             : Unix Makefiles\n'}
[0.515203] (ydlidar_sdk) StdoutLine: {'line': b'--  CMake build tool            : /usr/bin/make\n'}
[0.515230] (ydlidar_sdk) StdoutLine: {'line': b'--  Compiler                    : GNU\n'}
[0.515262] (ydlidar_sdk) StdoutLine: {'line': b'--  Configuration               : \n'}
[0.515288] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[0.515315] (ydlidar_sdk) StdoutLine: {'line': b'--  __________________________ OPTIONS _____________________________\n'}
[0.515344] (ydlidar_sdk) StdoutLine: {'line': b'--  Build YDLidar-SDK as a shared library?\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[0.515374] (ydlidar_sdk) StdoutLine: {'line': b'--  Build Examples?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 : Yes \n'}
[0.515402] (ydlidar_sdk) StdoutLine: {'line': b'--  Build C Sharp API?\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[0.515430] (ydlidar_sdk) StdoutLine: {'line': b'--  Build TEST?  \t\t\t\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80 :  No \n'}
[0.515457] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[0.515484] (ydlidar_sdk) StdoutLine: {'line': b'--  _________________________ INSTALL _____________________\n'}
[0.515511] (ydlidar_sdk) StdoutLine: {'line': b'--  Install prefix                    : /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk\n'}
[0.515538] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[0.515565] (ydlidar_sdk) StdoutLine: {'line': b'--  _______________________ WRAPPERS/BINDINGS ______________________\n'}
[0.515591] (ydlidar_sdk) StdoutLine: {'line': b'--  Python bindings (pyydlidar)   :  No \n'}
[0.515618] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: Swig found?       :  No [Version: ]\n'}
[0.515645] (ydlidar_sdk) StdoutLine: {'line': b'--   - dep: PythonLibs found?  : Yes [Version: 3.8.10]\n'}
[0.515672] (ydlidar_sdk) StdoutLine: {'line': b'-- \n'}
[0.517801] (ydlidar_sdk) StdoutLine: {'line': b'-- Configuring done\n'}
[0.533710] (ydlidar_sdk) StdoutLine: {'line': b'-- Generating done\n'}
[0.535385] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.538914] (ydlidar_sdk) StdoutLine: {'line': b'-- Build files have been written to: /home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk\n'}
[0.545106] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[0.545597] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'build'}
[0.545620] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk', '--', '-j12', '-l12'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[0.553197] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[0.567926] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_sdk\x1b[0m\n'}
[0.569218] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 1.0.4 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)\n'}
[0.570045] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.570703] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[0.586966] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 1.0.4 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)\n'}
[0.587816] (ydlidar_x3_ros) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[0.588393] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread.h\n'}
[0.598081] (ydlidar_sdk) StdoutLine: {'line': b'[  3%] \x1b[32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/json/cJSON.c.o\x1b[0m\n'}
[0.598282] (ydlidar_sdk) StdoutLine: {'line': b'[  3%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/base/timer.cpp.o\x1b[0m\n'}
[0.598394] (ydlidar_sdk) StdoutLine: {'line': b'[  5%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/SimpleSocket.cpp.o\x1b[0m\n'}
[0.598475] (ydlidar_sdk) StdoutLine: {'line': b'[  7%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/serial.cpp.o\x1b[0m\n'}
[0.598566] (ydlidar_sdk) StdoutLine: {'line': b'[  9%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/common/ydlidar_def.cpp.o\x1b[0m\n'}
[0.598990] (ydlidar_sdk) StdoutLine: {'line': b'[ 12%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/PassiveSocket.cpp.o\x1b[0m\n'}
[0.599141] (ydlidar_sdk) StdoutLine: {'line': b'[ 12%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/list_ports_linux.cpp.o\x1b[0m\n'}
[0.599198] (ydlidar_sdk) StdoutLine: {'line': b'[ 14%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/network/ActiveSocket.cpp.o\x1b[0m\n'}
[0.599387] (ydlidar_sdk) StdoutLine: {'line': b'[ 16%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/unix_serial.cpp.o\x1b[0m\n'}
[0.599526] (ydlidar_sdk) StdoutLine: {'line': b'[ 18%] \x1b[32mBuilding C object CMakeFiles/ydlidar_sdk.dir/core/serial/impl/unix/lock.c.o\x1b[0m\n'}
[0.600593] (-) TimerEvent: {}
[0.607422] (ydlidar_sdk) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/CYdLidar.cpp.o\x1b[0m\n'}
[0.614608] (ydlidar_sdk) StdoutLine: {'line': b'[ 21%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/DTSLidarDriver.cpp.o\x1b[0m\n'}
[0.628939] (ydlidar_sdk) StdoutLine: {'line': b'[ 23%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ETLidarDriver.cpp.o\x1b[0m\n'}
[0.633778] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[0.633985] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[0.668122] (ydlidar_sdk) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/GSLidarDriver.cpp.o\x1b[0m\n'}
[0.679366] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread.h - found\n'}
[0.679637] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[0.686675] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:39\x1b[m\x1b[K:\n'}
[0.686993] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.h:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K"SDK_CMD_STARTSCAN" redefined\n'}
[0.687099] (ydlidar_sdk) StderrLine: {'line': b'   19 | #define SDK_CMD_STARTSCAN 0x01 //\xe5\xbc\x80\xe5\x90\xaf\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[0.687192] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[0.687272] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:38\x1b[m\x1b[K:\n'}
[0.687354] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:70:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kthis is the location of the previous definition\n'}
[0.687437] (ydlidar_sdk) StderrLine: {'line': b'   70 | #define SDK_CMD_STARTSCAN 0x60 //\xe5\xbc\x80\xe5\x90\xaf\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[0.687511] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[0.687586] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:39\x1b[m\x1b[K:\n'}
[0.687661] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.h:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[K"SDK_CMD_STOPSCAN" redefined\n'}
[0.687733] (ydlidar_sdk) StderrLine: {'line': b'   20 | #define SDK_CMD_STOPSCAN 0x02 //\xe5\x81\x9c\xe6\xad\xa2\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[0.687805] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[0.687874] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:38\x1b[m\x1b[K:\n'}
[0.687954] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:71:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kthis is the location of the previous definition\n'}
[0.688027] (ydlidar_sdk) StderrLine: {'line': b'   71 | #define SDK_CMD_STOPSCAN 0x61 //\xe5\x81\x9c\xe6\xad\xa2\xe6\xb5\x8b\xe8\xb7\x9d\n'}
[0.688097] (ydlidar_sdk) StderrLine: {'line': b'      | \n'}
[0.700724] (-) TimerEvent: {}
[0.756707] (ydlidar_sdk) StdoutLine: {'line': b'[ 27%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/SDMLidarDriver.cpp.o\x1b[0m\n'}
[0.765969] (ydlidar_sdk) StdoutLine: {'line': b'[ 29%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/TiaLidarDriver.cpp.o\x1b[0m\n'}
[0.800835] (-) TimerEvent: {}
[0.823285] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[0.823540] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[0.831959] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/ETLidarDriver.h:46\x1b[m\x1b[K,\n'}
[0.832263] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/ETLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[0.832388] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.832457] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.832522] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[0.832575] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.832625] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.832676] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.832726] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.832773] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.832826] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[0.832876] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[0.832926] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[0.832979] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[0.833034] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.833086] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[0.833136] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[0.833185] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.833233] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.833282] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.833357] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.833419] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.833471] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.833518] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.833567] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.833615] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.833667] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.833718] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.833776] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.833835] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.833886] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.833936] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.833998] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.834072] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.834125] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.834174] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.834222] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.872320] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/common.h:45\x1b[m\x1b[K,\n'}
[0.872657] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/serial.cpp:12\x1b[m\x1b[K:\n'}
[0.872745] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.872802] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.872865] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[0.872922] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.872976] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.873027] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.873077] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.873127] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.873191] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[0.873249] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[0.873308] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[0.873356] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[0.873407] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.873457] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[0.873506] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[0.873554] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.873602] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.873652] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.873708] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.873758] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.873807] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.873855] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.873903] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.873949] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.874009] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.874104] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.874172] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.874264] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.874329] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.874390] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.874440] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.874490] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.874534] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.874592] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.874646] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.877103] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\n'}
[0.882235] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads\n'}
[0.900958] (-) TimerEvent: {}
[0.909202] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[0.909457] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[0.909579] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:29\x1b[m\x1b[K:\n'}
[0.909678] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.909783] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.909879] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[0.909966] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.910058] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.910163] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.910248] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.910547] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.910698] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[0.910790] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[0.910874] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[0.910954] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[0.911037] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.911119] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[0.911200] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[0.911280] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.911363] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.911603] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.911734] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.911832] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.911922] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.912011] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.912101] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.912327] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.912454] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.912550] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.912679] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.912781] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.912866] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.913090] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.913201] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.913288] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.913375] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.913456] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.913538] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.941571] (ydlidar_sdk) StdoutLine: {'line': b'[ 30%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/ydlidar_sdk.cpp.o\x1b[0m\n'}
[0.945610] (ydlidar_sdk) StdoutLine: {'line': b'[ 32%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/NoiseFilter.cpp.o\x1b[0m\n'}
[0.945916] (ydlidar_sdk) StdoutLine: {'line': b'[ 34%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/YDlidarDriver.cpp.o\x1b[0m\n'}
[0.973797] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[0.974032] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:46\x1b[m\x1b[K,\n'}
[0.974111] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:56\x1b[m\x1b[K:\n'}
[0.974167] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.974218] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.974272] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[0.974319] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.974377] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.974428] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.974474] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.974526] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.974579] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[0.974624] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[0.974668] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[0.974712] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[0.974758] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.974803] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[0.974847] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[0.974892] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.974934] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.975120] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.975212] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.975266] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.975314] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.975361] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.975410] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.975454] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.975514] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.975563] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.975609] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.975652] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.975698] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.975742] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[0.975790] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[0.975834] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[0.975879] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[0.975924] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[0.975971] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[0.994813] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:56\x1b[m\x1b[K:\n'}
[0.995049] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.995141] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.995197] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[0.995253] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.995376] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.995447] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[0.995498] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.995545] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.995594] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.995661] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[0.995767] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.995814] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.995862] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[0.995907] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.995954] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.995999] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.996050] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[0.996155] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.996201] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.996245] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[0.996289] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.996337] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.996398] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.996487] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[0.996536] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[0.996581] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[0.996625] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[0.996670] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[0.996716] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.996799] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.996875] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[0.996920] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[0.996964] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[0.997007] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[0.997052] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[0.997096] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.001069] (-) TimerEvent: {}
[1.014176] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.014433] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.014522] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.014576] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.014623] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.014669] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.014713] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.014756] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.014801] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.014850] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.014894] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.014938] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.020256] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::serial::Serial::SerialImpl::open()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.020513] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:756:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.020587] (ydlidar_sdk) StderrLine: {'line': b'  756 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"fcntl F_GETFL failed"\x1b[m\x1b[K);\n'}
[1.020649] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.020701] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:761:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.020751] (ydlidar_sdk) StderrLine: {'line': b'  761 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"fcntl F_SETFL failed"\x1b[m\x1b[K);\n'}
[1.020797] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.022379] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::serial::Serial::SerialImpl::waitfordata(std::size_t, uint32_t, std::size_t*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.022588] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1038:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.022657] (ydlidar_sdk) StderrLine: {'line': b' 1038 |         ydlidar::core::common::warn(\x1b[01;35m\x1b[K"Wait for data [%u]ms timeout"\x1b[m\x1b[K, timeout);\n'}
[1.022707] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.023943] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kstd::size_t ydlidar::core::serial::Serial::SerialImpl::write(const uint8_t*, std::size_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.024181] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1242:38:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.024255] (ydlidar_sdk) StderrLine: {'line': b' 1242 |         ydlidar::core::common::error(\x1b[01;35m\x1b[K"Failed to write serial port data [%d]"\x1b[m\x1b[K, errno);\n'}
[1.024311] (ydlidar_sdk) StderrLine: {'line': b'      |                                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.024357] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/core/serial/impl/unix/unix_serial.cpp:1247:37:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.024406] (ydlidar_sdk) StderrLine: {'line': b' 1247 |         ydlidar::core::common::warn(\x1b[01;35m\x1b[K"Failed to write serial port data, "\x1b[m\x1b[K\n'}
[1.024454] (ydlidar_sdk) StderrLine: {'line': b'      |                                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.024508] (ydlidar_sdk) StderrLine: {'line': b' 1248 | \x1b[01;35m\x1b[K                      "real size [%ld] < expect size [%u]"\x1b[m\x1b[K,\n'}
[1.024557] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.043532] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[1.043800] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[1.048585] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.h:58\x1b[m\x1b[K,\n'}
[1.048943] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:37\x1b[m\x1b[K:\n'}
[1.049058] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.049173] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.049325] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.049475] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.049546] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.049623] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.049681] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.049733] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.049792] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.049848] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.049899] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.049956] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.050013] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.050092] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.050149] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.050200] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.050251] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.050299] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.050365] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.050417] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.050468] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.050531] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.050592] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.050648] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.050698] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.050746] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.050795] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.050843] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.050891] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.050938] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.050998] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.051048] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.051095] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.051139] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.051190] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.075857] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread_create in pthreads - not found\n'}
[1.076119] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread_create in pthread\n'}
[1.078866] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/ETLidarDriver.h:51\x1b[m\x1b[K,\n'}
[1.079097] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/ETLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[1.079245] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.079303] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.079350] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.079408] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.079465] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.079522] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.079595] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.079650] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.079798] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.079856] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.079908] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.079959] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.080071] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.080125] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.080220] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.080296] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.080348] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.080391] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.080444] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.080489] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.080532] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.080578] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.080623] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.080667] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.080712] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.080758] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.080805] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.080847] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.080891] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.080943] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.080991] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.081034] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.081077] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.081128] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.081173] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.081221] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.081320] (ydlidar_sdk) StdoutLine: {'line': b'[ 36%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_sdk.dir/src/filters/StrongLightFilter.cpp.o\x1b[0m\n'}
[1.087657] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:33\x1b[m\x1b[K:\n'}
[1.087846] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.087919] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.087982] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.088033] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.088127] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.088192] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.088250] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.088364] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.h:8\x1b[m\x1b[K,\n'}
[1.088537] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.cpp:3\x1b[m\x1b[K:\n'}
[1.088664] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.088727] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.088788] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.088842] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.088902] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.088959] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.089016] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.089072] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.089139] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.089267] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.089330] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.089386] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.089579] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.089635] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.089683] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.089729] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.089778] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.089828] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.089884] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.089941] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.089995] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.090063] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.090115] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.090165] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.090225] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.090277] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.090328] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.090380] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.090433] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.090486] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.090551] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.090599] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.090647] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.090699] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.090747] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.090926] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.091053] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.091157] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.091246] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.091342] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.091428] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.091509] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.092045] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.092224] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.092324] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.092413] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.092505] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.092597] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.092710] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.093254] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.093413] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.093519] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.093604] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.093682] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.093762] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.093840] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.094333] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.094497] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.094603] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.094696] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.095289] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.095449] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.095546] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.095630] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.097499] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.097733] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.097791] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.097838] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.097881] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.097925] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.097968] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.098029] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.098075] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.098120] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.098164] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.098225] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.101198] (-) TimerEvent: {}
[1.105398] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.105655] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.105791] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.105884] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.105963] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.106060] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.106140] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.106220] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.106302] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.106381] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.106451] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.106523] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.131192] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/serial/common.h:45\x1b[m\x1b[K,\n'}
[1.131438] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:6\x1b[m\x1b[K:\n'}
[1.131596] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.131667] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.131815] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.131944] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.132001] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.132049] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.132095] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.132141] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.132208] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.132255] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.132297] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.132339] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.132384] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.132433] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.132476] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.132517] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.132562] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.132606] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.132655] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.132698] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.133399] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.133437] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.133472] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.133509] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.133558] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.133596] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.133635] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.133669] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.133705] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.133740] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.133777] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.133812] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.133846] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.133884] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.133921] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.141418] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:57\x1b[m\x1b[K,\n'}
[1.141665] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[1.141821] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.141912] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.141983] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.142059] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.142242] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.142306] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.142366] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.142413] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.142469] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.142519] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.142562] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.142606] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.142651] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.142701] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.142747] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.142796] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.142847] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.142895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.142954] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.143006] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.143056] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.143102] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.143147] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.143191] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.143242] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.143296] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.143340] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.143391] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.143441] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.143486] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.143535] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.143585] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.143634] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.143681] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.143729] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.153648] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.h:60\x1b[m\x1b[K,\n'}
[1.153837] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:37\x1b[m\x1b[K:\n'}
[1.154004] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.154097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.154216] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.154268] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.154314] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.154374] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.154474] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.154528] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.154584] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.154631] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.154687] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.154739] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.154792] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.154841] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.154983] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.155038] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.155086] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.155131] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.155175] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.155220] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.155266] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.155311] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.155357] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.155401] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.155445] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.155495] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.155552] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.155599] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.155647] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.155695] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.155749] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.155798] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.155844] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.155895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.155946] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.155994] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.157686] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::initialize()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.157895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:421:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.157970] (ydlidar_sdk) StderrLine: {'line': b'  421 |     error(\x1b[01;35m\x1b[K"Error initializing YDLIDAR check Comms."\x1b[m\x1b[K);\n'}
[1.158032] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.158097] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:427:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.158152] (ydlidar_sdk) StderrLine: {'line': b'  427 |     error(\x1b[01;35m\x1b[K"Error initializing YDLIDAR check status under [%s] and [%d]."\x1b[m\x1b[K,\n'}
[1.158203] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.158356] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:432:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.158461] (ydlidar_sdk) StderrLine: {'line': b'  432 |   info(\x1b[01;35m\x1b[K"Lidar init success, Elapsed time [%u]ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.158510] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.158948] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::GetLidarVersion(LidarVersion&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.159068] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:446:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.159129] (ydlidar_sdk) StderrLine: {'line': b'  446 |   info(\x1b[01;35m\x1b[K"Lidar version\\n"\x1b[m\x1b[K\n'}
[1.159177] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.159231] (ydlidar_sdk) StderrLine: {'line': b'  447 | \x1b[01;35m\x1b[K        "Firmware version: %u.%u.%u\\n"\x1b[m\x1b[K\n'}
[1.159277] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.159322] (ydlidar_sdk) StderrLine: {'line': b'  448 | \x1b[01;35m\x1b[K        "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.159366] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.159408] (ydlidar_sdk) StderrLine: {'line': b'  449 | \x1b[01;35m\x1b[K        "Serial: %s"\x1b[m\x1b[K,\n'}
[1.159452] (ydlidar_sdk) StderrLine: {'line': b'      |         \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.159858] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::turnOn()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.159992] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:474:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.160057] (ydlidar_sdk) StderrLine: {'line': b'  474 |       error(\x1b[01;35m\x1b[K"Failed to start scan mode %d"\x1b[m\x1b[K, ret);\n'}
[1.160107] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.160246] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:478:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.160357] (ydlidar_sdk) StderrLine: {'line': b'  478 |   info(\x1b[01;35m\x1b[K"Successed to start scan mode, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.160410] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.160634] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:485:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.160710] (ydlidar_sdk) StderrLine: {'line': b'  485 |     error(\x1b[01;35m\x1b[K"Failed to turn on the Lidar, because the lidar is [%s]."\x1b[m\x1b[K,\n'}
[1.160758] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.160910] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:489:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.160993] (ydlidar_sdk) StderrLine: {'line': b'  489 |   info(\x1b[01;35m\x1b[K"Successed to check the lidar, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.161046] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.161384] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:512:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.161491] (ydlidar_sdk) StderrLine: {'line': b'  512 |   info(\x1b[01;35m\x1b[K"Now lidar is scanning..."\x1b[m\x1b[K);\n'}
[1.161547] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.163573] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::doProcessSimple(LaserScan&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.163764] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:788:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.163842] (ydlidar_sdk) StderrLine: {'line': b'  788 |         warn(\x1b[01;35m\x1b[K"[YDLIDAR]: Real point count %lu > fixed point count %d"\x1b[m\x1b[K, count, all_node_count);\n'}
[1.163892] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.164209] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:812:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.164366] (ydlidar_sdk) StderrLine: {'line': b'  812 |     error(\x1b[01;35m\x1b[K"[YDLIDAR]: %d %s\\n"\x1b[m\x1b[K,\n'}
[1.164409] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.165150] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::turnOff()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.165301] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:831:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.165353] (ydlidar_sdk) StderrLine: {'line': b'  831 |       info(\x1b[01;35m\x1b[K"Now lidar scanning has stopped!"\x1b[m\x1b[K);\n'}
[1.165399] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.165899] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::getUserVersion(std::string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.166040] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:917:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.166095] (ydlidar_sdk) StderrLine: {'line': b'  917 |         error(\x1b[01;35m\x1b[K"Device is not open!"\x1b[m\x1b[K);\n'}
[1.166140] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.169133] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::checkLidarAbnormal()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.169404] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1179:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.169493] (ydlidar_sdk) StderrLine: {'line': b' 1179 |       info(\x1b[01;35m\x1b[K"Single Fixed Size: %d"\x1b[m\x1b[K, m_FixedSize);\n'}
[1.169550] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.169613] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1180:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.169665] (ydlidar_sdk) StderrLine: {'line': b' 1180 |       info(\x1b[01;35m\x1b[K"Sample Rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.169720] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.170122] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.170253] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.170311] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.170363] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.170408] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.170452] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.170497] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.170543] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.170587] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.170633] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.170688] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.170741] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.172397] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::calcSampleRate(int, double)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.172650] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1311:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.172725] (ydlidar_sdk) StderrLine: {'line': b' 1311 |     info(\x1b[01;35m\x1b[K"Scan Frequency: %.02fHz"\x1b[m\x1b[K, m_ScanFrequency);\n'}
[1.172782] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.172837] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1313:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.172885] (ydlidar_sdk) StderrLine: {'line': b' 1313 |       info(\x1b[01;35m\x1b[K"Fixed Size: %d"\x1b[m\x1b[K, m_FixedSize);\n'}
[1.172934] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.172983] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1314:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.173040] (ydlidar_sdk) StderrLine: {'line': b' 1314 |     info(\x1b[01;35m\x1b[K"Sample Rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.173093] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.173764] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::getDeviceHealth()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.173961] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1338:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.174038] (ydlidar_sdk) StderrLine: {'line': b' 1338 |     info(\x1b[01;35m\x1b[K"Lidar running correctly! The health status %s"\x1b[m\x1b[K,\n'}
[1.174098] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.174147] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1342:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.174199] (ydlidar_sdk) StderrLine: {'line': b' 1342 |       error(\x1b[01;35m\x1b[K"Error, Lidar internal error[0x%X] detected. "\x1b[m\x1b[K\n'}
[1.174248] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.174297] (ydlidar_sdk) StderrLine: {'line': b' 1343 | \x1b[01;35m\x1b[K            "Please reboot the device to retry."\x1b[m\x1b[K,\n'}
[1.174349] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.174400] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1354:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.174450] (ydlidar_sdk) StderrLine: {'line': b' 1354 |     error(\x1b[01;35m\x1b[K"Error, cannot retrieve Lidar health code %d"\x1b[m\x1b[K, ret);\n'}
[1.174497] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.174946] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::getDeviceInfo()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.175116] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1374:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.175203] (ydlidar_sdk) StderrLine: {'line': b' 1374 |     error(\x1b[01;35m\x1b[K"Fail to get baseplate device information!"\x1b[m\x1b[K);\n'}
[1.175257] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.175433] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1380:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.175507] (ydlidar_sdk) StderrLine: {'line': b' 1380 |     error(\x1b[01;35m\x1b[K"Current SDK does not support current lidar model [%s]"\x1b[m\x1b[K,\n'}
[1.175556] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.175702] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1390:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.175767] (ydlidar_sdk) StderrLine: {'line': b' 1390 |       error(\x1b[01;35m\x1b[K"Incorrect Lidar Type setting..."\x1b[m\x1b[K);\n'}
[1.175819] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.175980] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1410:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.176070] (ydlidar_sdk) StderrLine: {'line': b' 1410 |   info(\x1b[01;35m\x1b[K"Current Lidar Model Code %d"\x1b[m\x1b[K, lidar_model);\n'}
[1.176117] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.177301] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::handleSingleChannelDevice()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.177456] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1525:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.177498] (ydlidar_sdk) StderrLine: {'line': b' 1525 |   info(\x1b[01;35m\x1b[K"Single channel current sampling rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.177530] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.177802] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid CYdLidar::checkSampleRate()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.177918] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1541:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.177957] (ydlidar_sdk) StderrLine: {'line': b' 1541 |     info(\x1b[01;35m\x1b[K"Origin sample rate code: %u"\x1b[m\x1b[K, _rate.rate);\n'}
[1.177988] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.178213] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1567:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.178314] (ydlidar_sdk) StderrLine: {'line': b' 1567 |     info(\x1b[01;35m\x1b[K"Current sample rate: %.02fK"\x1b[m\x1b[K, m_SampleRate);\n'}
[1.178370] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.178490] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::checkScanFrequency()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.178569] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1589:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.178640] (ydlidar_sdk) StderrLine: {'line': b' 1589 |       info(\x1b[01;35m\x1b[K"Current scan frequency: %.02fHz"\x1b[m\x1b[K, frequency);\n'}
[1.178699] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.178801] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1628:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.178874] (ydlidar_sdk) StderrLine: {'line': b' 1628 |     error(\x1b[01;35m\x1b[K"Current scan frequency[%f] is out of range."\x1b[m\x1b[K,\n'}
[1.178929] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.178981] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1650:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.179034] (ydlidar_sdk) StderrLine: {'line': b' 1650 |   info(\x1b[01;35m\x1b[K"Current scan frequency: %.02fHz"\x1b[m\x1b[K, m_ScanFrequency);\n'}
[1.179087] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.179535] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::checkCalibrationAngle(const string&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.179664] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1717:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.179730] (ydlidar_sdk) StderrLine: {'line': b' 1717 |       info(\x1b[01;35m\x1b[K"Successfully obtained the %s offset angle[%f] from the lidar[%s]"\x1b[m\x1b[K,\n'}
[1.179780] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.179909] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1726:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.179981] (ydlidar_sdk) StderrLine: {'line': b' 1726 |   info(\x1b[01;35m\x1b[K"Current %s AngleOffset : %f\xc2\xb0"\x1b[m\x1b[K,\n'}
[1.180033] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.180078] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::checkConnect()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.180127] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1746:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.180174] (ydlidar_sdk) StderrLine: {'line': b' 1746 |     info(\x1b[01;35m\x1b[K"SDK initializing"\x1b[m\x1b[K);\n'}
[1.180233] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.180673] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1764:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.180834] (ydlidar_sdk) StderrLine: {'line': b' 1764 |       error(\x1b[01;35m\x1b[K"Create driver fail!"\x1b[m\x1b[K);\n'}
[1.180896] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.180943] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1768:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.180990] (ydlidar_sdk) StderrLine: {'line': b' 1768 |     info(\x1b[01;35m\x1b[K"SDK has been initialized"\x1b[m\x1b[K);\n'}
[1.181036] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.181080] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1769:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.181130] (ydlidar_sdk) StderrLine: {'line': b' 1769 |     info(\x1b[01;35m\x1b[K"SDK Version: %s"\x1b[m\x1b[K, lidarPtr->getSDKVersion().c_str());\n'}
[1.181175] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.181351] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1813:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.181449] (ydlidar_sdk) StderrLine: {'line': b' 1813 |       error(\x1b[01;35m\x1b[K"Error, cannot bind to the specified IP Address[%s]"\x1b[m\x1b[K,\n'}
[1.181499] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.181729] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1818:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.181825] (ydlidar_sdk) StderrLine: {'line': b' 1818 |       error(\x1b[01;35m\x1b[K"Error, cannot bind to the specified [%s:%s] and [%s:%d]"\x1b[m\x1b[K,\n'}
[1.181913] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.181990] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1828:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.182053] (ydlidar_sdk) StderrLine: {'line': b' 1828 |   info(\x1b[01;35m\x1b[K"Connect elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.182103] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.182146] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1829:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.182200] (ydlidar_sdk) StderrLine: {'line': b' 1829 |   info(\x1b[01;35m\x1b[K"Lidar successfully connected [%s:%d]"\x1b[m\x1b[K,\n'}
[1.182243] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.182444] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool CYdLidar::checkStatus()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.182549] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1842:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.182605] (ydlidar_sdk) StderrLine: {'line': b' 1842 |   info(\x1b[01;35m\x1b[K"Check status, Elapsed time %u ms"\x1b[m\x1b[K, getms() - t);\n'}
[1.182656] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.188080] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::printLogo()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.188377] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1883:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.188495] (ydlidar_sdk) StderrLine: {'line': b' 1883 |   info(\x1b[01;35m\x1b[K"__   ______  _     ___ ____    _    ____"\x1b[m\x1b[K);\n'}
[1.188554] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.188601] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1884:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.188648] (ydlidar_sdk) StderrLine: {'line': b' 1884 |   info(\x1b[01;35m\x1b[K"\\\\ \\\\ / /  _ \\\\| |   |_ _|  _ \\\\  / \\\\  |  _ \\\\"\x1b[m\x1b[K);\n'}
[1.188693] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.188734] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1885:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.188782] (ydlidar_sdk) StderrLine: {'line': b' 1885 |   info(\x1b[01;35m\x1b[K" \\\\ V /| | | | |    | || | | |/ _ \\\\ | |_) |"\x1b[m\x1b[K);\n'}
[1.188826] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.188875] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1886:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.188921] (ydlidar_sdk) StderrLine: {'line': b' 1886 |   info(\x1b[01;35m\x1b[K"  | | | |_| | |___ | || |_| / ___ \\\\|  _ <"\x1b[m\x1b[K);\n'}
[1.188968] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.189017] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1887:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.189077] (ydlidar_sdk) StderrLine: {'line': b' 1887 |   info(\x1b[01;35m\x1b[K"  |_| |____/|_____|___|____/_/   \\\\_\\\\_| \\\\_\\\\"\x1b[m\x1b[K);\n'}
[1.189127] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.189173] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.cpp:1888:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.189220] (ydlidar_sdk) StderrLine: {'line': b' 1888 |   info(\x1b[01;35m\x1b[K""\x1b[m\x1b[K);\n'}
[1.189267] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~\x1b[m\x1b[K\n'}
[1.192790] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::waitPackage(node_info*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.193054] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:824:39:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.193145] (ydlidar_sdk) StderrLine: {'line': b'  824 |                                 error(\x1b[01;35m\x1b[K"GS cs 0x%02X != 0x%02X"\x1b[m\x1b[K, CheckSumCal, CheckSum);\n'}
[1.193203] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.193343] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:854:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.193450] (ydlidar_sdk) StderrLine: {'line': b'  854 |                 debug(\x1b[01;35m\x1b[K"GS lidar module[%d] model[%u]"\x1b[m\x1b[K, moduleNum, model);\n'}
[1.193514] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.193572] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:7\x1b[m\x1b[K:\n'}
[1.193626] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.193688] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.193820] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.193874] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.193961] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.194138] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.194204] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.194268] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:910:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[1.194338] (ydlidar_sdk) StderrLine: {'line': b'  910 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[1.194400] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.194452] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:913:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[1.194505] (ydlidar_sdk) StderrLine: {'line': b'  913 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[1.194557] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.194605] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:916:35:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Ktaking address of packed member of \xe2\x80\x98\x1b[01m\x1b[Knode_info\x1b[m\x1b[K\xe2\x80\x99 may result in an unaligned pointer value [\x1b[01;35m\x1b[K-Waddress-of-packed-member\x1b[m\x1b[K]\n'}
[1.194657] (ydlidar_sdk) StderrLine: {'line': b'  916 |                     &sampleAngle, \x1b[01;35m\x1b[K&(*node).dist\x1b[m\x1b[K);\n'}
[1.194708] (ydlidar_sdk) StderrLine: {'line': b'      |                                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.195241] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.195387] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.195446] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.195494] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.195539] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.195587] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.195633] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.196021] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.196148] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.196203] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.196250] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.196308] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.196354] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.196401] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.196804] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.196912] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.196963] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.197005] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.197048] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.197101] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.197145] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.197488] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.197599] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.197659] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.197705] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.198111] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.198226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.198283] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.198332] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.199133] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::setDeviceAddress(uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.199338] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1337:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.199415] (ydlidar_sdk) StderrLine: {'line': b' 1337 |         info(\x1b[01;35m\x1b[K"GS lidar count %u"\x1b[m\x1b[K, moduleCount);\n'}
[1.199478] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.200337] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::GSLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.200593] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1453:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.200698] (ydlidar_sdk) StderrLine: {'line': b' 1453 |         error(\x1b[01;35m\x1b[K"Fail to create GS thread"\x1b[m\x1b[K);\n'}
[1.200762] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.200812] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1457:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.200866] (ydlidar_sdk) StderrLine: {'line': b' 1457 |     info(\x1b[01;35m\x1b[K"Create GS thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[1.200920] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.201275] (-) TimerEvent: {}
[1.209036] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[1.210832] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::GSLidarDriver::getDeviceInfo(std::vector<device_info_ex>&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.211042] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1578:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.211112] (ydlidar_sdk) StderrLine: {'line': b' 1578 |         error(\x1b[01;35m\x1b[K"Fail to get GS lidar count"\x1b[m\x1b[K);\n'}
[1.211165] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.211352] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.212352] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.h:10\x1b[m\x1b[K,\n'}
[1.212530] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.cpp:3\x1b[m\x1b[K:\n'}
[1.212629] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.212684] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.212733] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.212780] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.212833] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.212887] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.212932] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.213084] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.213159] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.213212] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.213261] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.213310] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.213361] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.213406] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.213452] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::GSLidarDriver::getDeviceInfo2(device_info&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.213497] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1719:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.213544] (ydlidar_sdk) StderrLine: {'line': b' 1719 |         info(\x1b[01;35m\x1b[K"Get Module[%d] Lidar model[%u]"\x1b[m\x1b[K, id, di.model);\n'}
[1.213588] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.213633] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.213679] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.213724] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.213769] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.213816] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.213864] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.213911] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.214103] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.214197] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.214273] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.214326] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.214373] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.214421] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.214468] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.214513] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual bool ydlidar::GSLidarDriver::ota()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.214561] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1775:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.214608] (ydlidar_sdk) StderrLine: {'line': b' 1775 |         error(\x1b[01;35m\x1b[K"[OTA] Not set OTA file"\x1b[m\x1b[K);\n'}
[1.214653] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.214698] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1783:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.214748] (ydlidar_sdk) StderrLine: {'line': b' 1783 |         error(\x1b[01;35m\x1b[K"[OTA] Fail to open OTA file[%s]"\x1b[m\x1b[K, m_OtaName.c_str());\n'}
[1.214793] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.214838] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.214882] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.214928] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.214973] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.215019] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.215069] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.215114] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.215157] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.218339] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.218541] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.218620] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.218675] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.218726] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.218777] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.218825] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.218872] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.218919] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.218964] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219011] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.219057] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219100] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1797:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219149] (ydlidar_sdk) StderrLine: {'line': b' 1797 |     info(\x1b[01;35m\x1b[K"[OTA] File size [%.02lf]KB"\x1b[m\x1b[K, data.size() / 1024.0);\n'}
[1.219195] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219238] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1806:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219283] (ydlidar_sdk) StderrLine: {'line': b' 1806 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to Start OTA"\x1b[m\x1b[K, addr);\n'}
[1.219327] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219373] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1813:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219416] (ydlidar_sdk) StderrLine: {'line': b' 1813 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to download data"\x1b[m\x1b[K, addr);\n'}
[1.219460] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219503] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1820:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219547] (ydlidar_sdk) StderrLine: {'line': b' 1820 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to Start OTA"\x1b[m\x1b[K, addr);\n'}
[1.219596] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219638] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1827:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219684] (ydlidar_sdk) StderrLine: {'line': b' 1827 |             error(\x1b[01;35m\x1b[K"[OTA] 0x%02X Fail to restart gs lidar"\x1b[m\x1b[K, addr);\n'}
[1.219726] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219769] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1831:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.219812] (ydlidar_sdk) StderrLine: {'line': b' 1831 |         info(\x1b[01;35m\x1b[K"[OTA] 0x%02X Success to finish OTA"\x1b[m\x1b[K, addr);\n'}
[1.219859] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.219910] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::GSLidarDriver::execOta(uint8_t, const std::vector<unsigned char>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.219953] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1884:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.220000] (ydlidar_sdk) StderrLine: {'line': b' 1884 |             info(\x1b[01;35m\x1b[K"[OTA] Downloading [%d%%]"\x1b[m\x1b[K, p);\n'}
[1.220051] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.220095] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/GSLidarDriver.cpp:1919:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.220143] (ydlidar_sdk) StderrLine: {'line': b' 1919 |             error(\x1b[01;35m\x1b[K"[OTA] Fail to download [%d] package"\x1b[m\x1b[K, j + 1);\n'}
[1.220188] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.226198] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Looking for pthread_create in pthread - found\n'}
[1.226403] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.226489] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::TiaLidarDriver::connect(const char*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.226561] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:81:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.226619] (ydlidar_sdk) StderrLine: {'line': b'   81 |         error(\x1b[01;35m\x1b[K"Fail to connect TCP [%s:%d],Error [%s]"\x1b[m\x1b[K,\n'}
[1.226681] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.226732] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:86:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.226785] (ydlidar_sdk) StderrLine: {'line': b'   86 |     info(\x1b[01;35m\x1b[K"Connect TCP [%s:%d]"\x1b[m\x1b[K, m_port.c_str(), m_port2);\n'}
[1.226836] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.226887] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:90:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.226938] (ydlidar_sdk) StderrLine: {'line': b'   90 |         error(\x1b[01;35m\x1b[K"Fail to connect UDP [%s:%d],Error [%s]"\x1b[m\x1b[K,\n'}
[1.226982] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.227029] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.227077] (ydlidar_sdk) StderrLine: {'line': b'   96 |     info(\x1b[01;35m\x1b[K"Connect UDP [%s:%d]"\x1b[m\x1b[K, m_port.c_str(), m_baudrate);\n'}
[1.227128] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.227183] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::TiaLidarDriver::configDisconnect()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.227233] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:179:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.227406] (ydlidar_sdk) StderrLine: {'line': b'  179 |         info(\x1b[01;35m\x1b[K"Disconnect TCP"\x1b[m\x1b[K);\n'}
[1.227477] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.227529] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.227578] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:275:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.227625] (ydlidar_sdk) StderrLine: {'line': b'  275 |       error(\x1b[01;35m\x1b[K"Fail to create data thread"\x1b[m\x1b[K);\n'}
[1.227673] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.227720] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:278:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.227772] (ydlidar_sdk) StderrLine: {'line': b'  278 |     info(\x1b[01;35m\x1b[K"Create TIA thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[1.227830] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.227877] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::TiaLidarDriver::dataDisconnect()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.227939] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:373:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.228046] (ydlidar_sdk) StderrLine: {'line': b'  373 |         info(\x1b[01;35m\x1b[K"Disconnect UDP"\x1b[m\x1b[K);\n'}
[1.228099] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.228152] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::TiaLidarDriver::parseScanDataThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.228204] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:546:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.228250] (ydlidar_sdk) StderrLine: {'line': b'  546 |                     error(\x1b[01;35m\x1b[K"Exit scanning thread!"\x1b[m\x1b[K);\n'}
[1.228295] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.228342] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:566:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.228387] (ydlidar_sdk) StderrLine: {'line': b'  566 |                 error(\x1b[01;35m\x1b[K"Timout count [%d]"\x1b[m\x1b[K, timeout_count);\n'}
[1.228434] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.228479] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::TiaLidarDriver::parseParamInfoThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.228581] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:613:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.228635] (ydlidar_sdk) StderrLine: {'line': b'  613 |                 debug(\x1b[01;35m\x1b[K"ScanFreq: %f SampleRate: %f"\x1b[m\x1b[K,\n'}
[1.228680] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.238235] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::setParam(const string&, const float&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.238357] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:660:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.238435] (ydlidar_sdk) StderrLine: {'line': b'  660 |             warn(\x1b[01;35m\x1b[K"TIA scanning frequency [%.02fHz] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[1.238500] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.238548] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:669:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.238597] (ydlidar_sdk) StderrLine: {'line': b'  669 |             warn(\x1b[01;35m\x1b[K"TIA sampling rate [%.02fK/s] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[1.238651] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.238698] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:678:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.238745] (ydlidar_sdk) StderrLine: {'line': b'  678 |             warn(\x1b[01;35m\x1b[K"TIA scanning frequency [%dHz] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[1.238790] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.238833] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:687:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.238881] (ydlidar_sdk) StderrLine: {'line': b'  687 |             warn(\x1b[01;35m\x1b[K"TIA sampling rate [%dK/s] setting is incorrect"\x1b[m\x1b[K, v);\n'}
[1.238927] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.238972] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::setParam(cJSON*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.239020] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:713:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.239068] (ydlidar_sdk) StderrLine: {'line': b'  713 |         warn(\x1b[01;35m\x1b[K"Fail to set lidar parameter,Error to response"\x1b[m\x1b[K);\n'}
[1.239115] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239160] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::sendData(cJSON*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.239211] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:747:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.239262] (ydlidar_sdk) StderrLine: {'line': b'  747 |         debug(\x1b[01;35m\x1b[K"[SEND] %s"\x1b[m\x1b[K, sd.c_str());\n'}
[1.239308] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239358] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:750:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.239402] (ydlidar_sdk) StderrLine: {'line': b'  750 |         warn(\x1b[01;35m\x1b[K"Fail to send TCP data"\x1b[m\x1b[K);\n'}
[1.239448] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239497] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.239548] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.239596] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.239644] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239691] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.239737] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239779] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.239824] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239869] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.239915] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.239958] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.240006] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240052] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::TiaLidarDriver::waitResp(cJSON*&, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.240100] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:769:23:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240155] (ydlidar_sdk) StderrLine: {'line': b'  769 |                 debug(\x1b[01;35m\x1b[K"[RECV] %s"\x1b[m\x1b[K, rd.c_str());\n'}
[1.240202] (ydlidar_sdk) StderrLine: {'line': b'      |                       \x1b[01;35m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240247] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:774:22:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240294] (ydlidar_sdk) StderrLine: {'line': b'  774 |                 warn(\x1b[01;35m\x1b[K"Fail to wait response,Error json format"\x1b[m\x1b[K);\n'}
[1.240338] (ydlidar_sdk) StderrLine: {'line': b'      |                      \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240383] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:781:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240433] (ydlidar_sdk) StderrLine: {'line': b'  781 |     warn(\x1b[01;35m\x1b[K"Waiting for response timeout [%u]ms"\x1b[m\x1b[K, timeout);\n'}
[1.240478] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240522] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::TiaLidarDriver::getScanData(node_info*, size_t&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.240568] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:803:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240614] (ydlidar_sdk) StderrLine: {'line': b'  803 |             warn(\x1b[01;35m\x1b[K"Fail to recv UDP data"\x1b[m\x1b[K);\n'}
[1.240659] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240705] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:808:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240755] (ydlidar_sdk) StderrLine: {'line': b'  808 |             warn(\x1b[01;35m\x1b[K"The packet length [%d] < the expected value [%d]"\x1b[m\x1b[K,\n'}
[1.240804] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240849] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:849:14:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.240908] (ydlidar_sdk) StderrLine: {'line': b'  849 |         warn(\x1b[01;35m\x1b[K"Data packet lost,current packet index [%u],last packet index [%u]"\x1b[m\x1b[K,\n'}
[1.240955] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.240999] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:870:18:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.241045] (ydlidar_sdk) StderrLine: {'line': b'  870 |             warn(\x1b[01;35m\x1b[K"The format of the [%d] packet header is incorrect"\x1b[m\x1b[K, i + 1);\n'}
[1.241089] (ydlidar_sdk) StderrLine: {'line': b'      |                  \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.241135] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:904:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.241181] (ydlidar_sdk) StderrLine: {'line': b'  904 |                     debug(\x1b[01;35m\x1b[K"Zero time [%llu]ns"\x1b[m\x1b[K, lastZeroTime);\n'}
[1.241225] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.241273] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/TiaLidarDriver.cpp:948:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.241319] (ydlidar_sdk) StderrLine: {'line': b'  948 |         debug(\x1b[01;35m\x1b[K"Angle range [%.02f~%.02f] stamp [%lu]ns index [%u]"\x1b[m\x1b[K,\n'}
[1.241360] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.241779] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::DTSLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.241951] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/DTSLidarDriver.cpp:304:45:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.242039] (ydlidar_sdk) StderrLine: {'line': b'  304 |     printf("[YDLIDAR] Create DTS thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K]\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[1.242095] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K~^\x1b[m\x1b[K      \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.242144] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K|\x1b[m\x1b[K                       \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.242188] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K            \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.242239] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.256239] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.h:59\x1b[m\x1b[K,\n'}
[1.256489] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:36\x1b[m\x1b[K:\n'}
[1.256651] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.256714] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.256768] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.256827] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.256944] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.257004] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.257052] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.257148] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.257232] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.257282] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.257331] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.257386] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.257490] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.257541] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.257586] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.257634] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.257704] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.257798] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.257849] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.257899] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.257944] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.257989] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.258042] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.258093] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.258138] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.258184] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.258237] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.258282] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.258327] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.258376] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.258423] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.258469] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.258517] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.258569] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.258623] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.258675] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.266907] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.267229] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[1.267300] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/ydlidar_sdk.cpp:27\x1b[m\x1b[K:\n'}
[1.267357] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.267408] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.267462] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.267514] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.267562] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.267610] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.267663] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.267718] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.267787] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.267846] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.267895] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.267944] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.267992] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.268042] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.268089] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.268141] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.268193] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.268245] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.268309] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.268358] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.268408] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.268457] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.268508] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.268554] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.268607] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.268654] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.268702] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.268749] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.268820] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.268868] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.268920] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.268969] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.269016] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.269064] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.269111] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.272476] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.272651] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.272731] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.272786] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.272843] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.272897] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.272945] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.273000] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.273049] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.273100] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.273150] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.273200] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.288108] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::SDMLidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.288300] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/SDMLidarDriver.cpp:812:44:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.288399] (ydlidar_sdk) StderrLine: {'line': b'  812 |     printf("[YDLIDAR] Create SDM thread 0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K\\n", \x1b[32m\x1b[K_thread.getHandle()\x1b[m\x1b[K);\n'}
[1.288459] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[01;35m\x1b[K~^\x1b[m\x1b[K     \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.288512] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[K|\x1b[m\x1b[K                      \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.288566] (ydlidar_sdk) StderrLine: {'line': b'      |                                            \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K           \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.288618] (ydlidar_sdk) StderrLine: {'line': b'      |                                           \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.301412] (-) TimerEvent: {}
[1.397990] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found sensor_msgs: 2.0.5 (/opt/ros/foxy/share/sensor_msgs/cmake)\n'}
[1.401514] (-) TimerEvent: {}
[1.403220] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Found sensor_msgs: 2.0.5 (/opt/ros/foxy/share/sensor_msgs/cmake)\n'}
[1.427519] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[1.427795] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:46\x1b[m\x1b[K,\n'}
[1.427865] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:26\x1b[m\x1b[K:\n'}
[1.427927] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.427981] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.428036] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[1.428087] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.428139] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.428188] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.428237] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.428286] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.428351] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[1.428399] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[1.428449] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[1.428498] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[1.428546] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.428593] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[1.428643] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[1.428689] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.428739] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.428788] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.428843] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.428892] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.428939] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.428987] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.429037] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.429081] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.429131] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.429177] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.429224] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.429270] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.429318] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.429366] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[1.429414] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[1.429460] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[1.429506] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[1.429550] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[1.429595] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[1.472397] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:26\x1b[m\x1b[K:\n'}
[1.472566] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.472631] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.472685] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.472735] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.472785] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.472836] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.472884] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.472998] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.473057] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.473110] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.473160] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.473210] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473374] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.473433] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.473483] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.473535] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.473593] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.473648] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.473700] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.473755] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.473806] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.473856] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.473905] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.473958] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[1.474006] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[1.474064] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.474113] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[1.474160] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.474261] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.474339] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.474383] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.474426] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.474469] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.474517] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[1.474569] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[1.474613] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[1.491732] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.491892] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.491952] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[1.492001] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.492049] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[1.492096] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.492142] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[1.492186] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.492229] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[1.492272] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.492315] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[1.492360] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.501622] (-) TimerEvent: {}
[1.515393] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::YDlidarDriver::cacheScanData()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.515578] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:633:19:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.515640] (ydlidar_sdk) StderrLine: {'line': b'  633 |             error(\x1b[01;35m\x1b[K"Exit scanning thread!"\x1b[m\x1b[K);\n'}
[1.515686] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.515737] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:666:17:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.515788] (ydlidar_sdk) StderrLine: {'line': b'  666 |           error(\x1b[01;35m\x1b[K"Timeout count: %d"\x1b[m\x1b[K, timeout_count);\n'}
[1.515835] (ydlidar_sdk) StderrLine: {'line': b'      |                 \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.516413] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::parseResponseHeader(uint8_t*, uint32_t)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.516529] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:867:21:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.516596] (ydlidar_sdk) StderrLine: {'line': b'  867 |               error(\x1b[01;35m\x1b[K"Checksum error c[0x%02X] != r[0x%02X]"\x1b[m\x1b[K, csc, csr);\n'}
[1.516646] (ydlidar_sdk) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.517600] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::YDlidarDriver::calcuteCheckSum(node_info*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.517706] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:1172:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.517770] (ydlidar_sdk) StderrLine: {'line': b' 1172 |       error(\x1b[01;35m\x1b[K"Check Sum 0x%04X != 0x%04X"\x1b[m\x1b[K, CheckSumCal, CheckSum);\n'}
[1.517820] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.520729] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kresult_t ydlidar::YDlidarDriver::createThread()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.520863] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:1931:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.520927] (ydlidar_sdk) StderrLine: {'line': b' 1931 |       error(\x1b[01;35m\x1b[K"[YDLIDAR] Fail to create thread"\x1b[m\x1b[K);\n'}
[1.520977] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.521024] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:1935:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.521075] (ydlidar_sdk) StderrLine: {'line': b' 1935 |     info(\x1b[01;35m\x1b[K"[YDLIDAR] Create thread 0x%X"\x1b[m\x1b[K, m_thread->get_id());\n'}
[1.521126] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.527940] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvirtual result_t ydlidar::YDlidarDriver::getIntensityFlag()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.528151] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:2701:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.528224] (ydlidar_sdk) StderrLine: {'line': b' 2701 |     info(\x1b[01;35m\x1b[K"Start to getting intensity flag"\x1b[m\x1b[K);\n'}
[1.528276] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.528326] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:2734:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.528383] (ydlidar_sdk) StderrLine: {'line': b' 2734 |               warn(\x1b[01;35m\x1b[K"Fail to getting intensity"\x1b[m\x1b[K);\n'}
[1.528433] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.528484] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:2758:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.528534] (ydlidar_sdk) StderrLine: {'line': b' 2758 |       info(\x1b[01;35m\x1b[K"Auto set intensity %d"\x1b[m\x1b[K, m_intensities);\n'}
[1.528584] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.528635] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/YDlidarDriver.cpp:2761:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[1.528690] (ydlidar_sdk) StderrLine: {'line': b' 2761 |     info(\x1b[01;35m\x1b[K"[YDLIDAR] End to getting intensity flag"\x1b[m\x1b[K);\n'}
[1.528745] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.532835] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found visualization_msgs: 2.0.5 (/opt/ros/foxy/share/visualization_msgs/cmake)\n'}
[1.546332] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Configuring done\n'}
[1.551002] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Generating done\n'}
[1.553372] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Build files have been written to: /home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros\n'}
[1.559336] (ydlidar_x3_ros) CommandEnded: {'returncode': 0}
[1.561798] (ydlidar_x3_ros) JobProgress: {'identifier': 'ydlidar_x3_ros', 'progress': 'build'}
[1.561830] (ydlidar_x3_ros) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros', '--', '-j12', '-l12'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[1.585817] (ydlidar_x3_ros) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_x3_node\x1b[0m\n'}
[1.601728] (-) TimerEvent: {}
[1.606615] (ydlidar_x3_ros) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_x3_node.dir/src/ydlidar_x3_node.cpp.o\x1b[0m\n'}
[1.608739] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found std_srvs: 2.0.5 (/opt/ros/foxy/share/std_srvs/cmake)\n'}
[1.622456] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.9.8 (/opt/ros/foxy/share/ament_lint_auto/cmake)\n'}
[1.676128] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'copyright' to check source files copyright and LICENSE\n"}
[1.681551] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[1.681735] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck include dirs: /home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src\n'}
[1.681809] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[1.683528] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'cpplint' to check C / C++ code against the Google style\n"}
[1.683680] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured cpplint exclude dirs and/or files: \n'}
[1.684008] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[1.684808] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[1.685220] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257\n"}
[1.686875] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[1.686970] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[1.687360] (ydlidar_ros2_driver) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[1.689372] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Configuring done\n'}
[1.697803] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Generating done\n'}
[1.701943] (-) TimerEvent: {}
[1.702197] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Build files have been written to: /home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver\n'}
[1.707775] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[1.708427] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'build'}
[1.709796] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver', '--', '-j12', '-l12'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[1.734199] (ydlidar_ros2_driver) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_ros2_driver_client\x1b[0m\n'}
[1.734403] (ydlidar_ros2_driver) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target ydlidar_ros2_driver_node\x1b[0m\n'}
[1.756690] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_ros2_driver_client.dir/src/ydlidar_ros2_driver_client.cpp.o\x1b[0m\n'}
[1.761580] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/ydlidar_ros2_driver_node.dir/src/ydlidar_ros2_driver_node.cpp.o\x1b[0m\n'}
[1.802085] (-) TimerEvent: {}
[1.807601] (ydlidar_sdk) StdoutLine: {'line': b'[ 38%] \x1b[32m\x1b[1mLinking CXX static library libydlidar_sdk.a\x1b[0m\n'}
[1.846574] (ydlidar_sdk) StdoutLine: {'line': b'[ 38%] Built target ydlidar_sdk\n'}
[1.855185] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_test\x1b[0m\n'}
[1.855394] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target scl_test\x1b[0m\n'}
[1.855531] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_ota\x1b[0m\n'}
[1.855633] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tia_test\x1b[0m\n'}
[1.855748] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target et_test\x1b[0m\n'}
[1.855801] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_restart\x1b[0m\n'}
[1.855850] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target sdm_test\x1b[0m\n'}
[1.855899] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tri_and_gs_test\x1b[0m\n'}
[1.855948] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_test\x1b[0m\n'}
[1.865043] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_test2\x1b[0m\n'}
[1.865626] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tea_test\x1b[0m\n'}
[1.866103] (ydlidar_sdk) StdoutLine: {'line': b'[ 40%] \x1b[32mBuilding CXX object examples/CMakeFiles/scl_test.dir/scl_test.cpp.o\x1b[0m\n'}
[1.866305] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target gs_restart\x1b[0m\n'}
[1.866423] (ydlidar_sdk) StdoutLine: {'line': b'[ 41%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_and_gs_test.dir/tri_and_gs_test.cpp.o\x1b[0m\n'}
[1.868549] (ydlidar_sdk) StdoutLine: {'line': b'[ 43%] \x1b[32mBuilding CXX object examples/CMakeFiles/et_test.dir/et_test.cpp.o\x1b[0m\n'}
[1.870400] (ydlidar_sdk) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object examples/CMakeFiles/sdm_test.dir/sdm_test.cpp.o\x1b[0m\n'}
[1.870629] (ydlidar_sdk) StdoutLine: {'line': b'[ 47%] \x1b[32mBuilding CXX object examples/CMakeFiles/tia_test.dir/tia_test.cpp.o\x1b[0m\n'}
[1.873267] (ydlidar_sdk) StdoutLine: {'line': b'[ 49%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_ota.dir/gs_ota.cpp.o\x1b[0m\n'}
[1.875959] (ydlidar_sdk) StdoutLine: {'line': b'[ 52%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_test2.dir/gs_test2.cpp.o\x1b[0m\n'}
[1.876184] (ydlidar_sdk) StdoutLine: {'line': b'[ 52%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_test.dir/gs_test.cpp.o\x1b[0m\n'}
[1.880104] (ydlidar_sdk) StdoutLine: {'line': b'[ 54%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_restart.dir/tri_restart.cpp.o\x1b[0m\n'}
[1.880370] (ydlidar_sdk) StdoutLine: {'line': b'[ 56%] \x1b[32mBuilding CXX object examples/CMakeFiles/tri_test.dir/tri_test.cpp.o\x1b[0m\n'}
[1.885121] (ydlidar_sdk) StdoutLine: {'line': b'[ 58%] \x1b[32mBuilding CXX object examples/CMakeFiles/gs_restart.dir/gs_restart.cpp.o\x1b[0m\n'}
[1.890592] (ydlidar_sdk) StdoutLine: {'line': b'[ 60%] \x1b[32mBuilding CXX object examples/CMakeFiles/tea_test.dir/tea_test.cpp.o\x1b[0m\n'}
[1.902200] (-) TimerEvent: {}
[2.002527] (-) TimerEvent: {}
[2.102853] (-) TimerEvent: {}
[2.103733] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.104156] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.104269] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/sdm_test.cpp:34\x1b[m\x1b[K:\n'}
[2.104362] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.104447] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.104533] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.104609] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.104681] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.104751] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.104819] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.104895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.104991] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.105063] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.105130] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.105199] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.105267] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.105335] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.105401] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.105476] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.105552] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.105619] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.105688] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.105756] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.105826] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.105901] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.105976] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.106062] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.106135] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.106203] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.106268] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.106342] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.106416] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.106488] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.106557] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.106631] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.106698] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.106769] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.106841] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.143701] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.144088] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.144372] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_and_gs_test.cpp:1\x1b[m\x1b[K:\n'}
[2.144714] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.144841] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.144947] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.145407] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.145501] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.145592] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.145674] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.145744] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.145818] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.145891] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.145958] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.146034] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.146105] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.146169] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.146232] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.146296] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.146359] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.146423] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.146487] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.146552] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/et_test.cpp:34\x1b[m\x1b[K:\n'}
[2.146616] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.146682] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.146759] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.146825] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.146890] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.146954] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.147018] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.147088] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.147156] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.147221] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.147291] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.147358] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.147424] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.147491] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.147557] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.147622] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.147687] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.147752] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.147821] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.147886] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.147957] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.148022] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.148091] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.148156] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.148223] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.148285] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.148354] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.148418] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.148482] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.148546] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.148620] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.148685] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.148755] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.148818] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.148881] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.148944] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.149010] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.149074] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.149143] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.149207] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.149271] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.149332] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.149402] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.149465] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.149528] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.149591] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.149660] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.149723] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.149789] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.149852] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.149915] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.149978] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.150057] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.169242] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.169545] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.169718] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_test.cpp:34\x1b[m\x1b[K:\n'}
[2.169882] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.170048] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.170215] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.170387] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.170541] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.170674] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.170812] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.171163] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.171341] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.171495] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.171644] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.171797] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.171941] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.172079] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.172212] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.172339] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.172480] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.172816] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.172986] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.173128] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.173265] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.173422] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.173565] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.173874] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.174038] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.174177] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.174310] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.174432] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.174556] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.174820] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.174990] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.175117] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.175238] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.175359] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.175508] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.190879] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.191217] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.191424] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test.cpp:40\x1b[m\x1b[K:\n'}
[2.191628] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.191758] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.191859] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.191940] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.192016] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.192091] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.192162] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.192236] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.192315] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.192394] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.192465] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.192535] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.192612] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.192682] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.192754] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.192819] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.192885] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.192952] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.193024] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.193091] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.193158] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.193231] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.193298] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.193363] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.193430] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.193497] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.193562] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.193633] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.193703] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.193768] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.193838] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.193904] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.193969] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.194049] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.194117] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.202974] (-) TimerEvent: {}
[2.224909] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.225272] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.225433] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test2.cpp:7\x1b[m\x1b[K:\n'}
[2.225587] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.225732] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.225820] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.225912] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.226000] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.226099] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.226181] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.226253] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.226330] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.226400] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.226470] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.226539] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.226611] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.226681] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.226757] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.226822] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.226891] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.226959] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.227031] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.227114] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.227189] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.227256] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.227322] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.227387] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.227454] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.227520] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.227592] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.227664] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.227737] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.227812] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.227885] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.227952] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.228017] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.228084] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.228157] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.254700] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.255058] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.255182] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:5\x1b[m\x1b[K:\n'}
[2.255279] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.255388] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.255486] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.255577] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.255669] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.255763] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.255851] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.255938] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.256048] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.256147] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.256230] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.256310] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.256383] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.256459] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.256529] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.256600] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.256668] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.256735] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.256816] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.256888] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.257223] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.257299] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.257370] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.257449] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.257531] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.257611] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.257689] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.257776] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.257855] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.257925] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.257999] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.258103] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.258185] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.258268] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.258349] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.258438] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.258525] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.258602] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_ota.cpp:40\x1b[m\x1b[K:\n'}
[2.258675] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.258752] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.258836] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.258913] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.258987] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.259062] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.259142] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.259218] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.259297] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.259367] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.259443] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.259522] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.259603] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.259684] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.259759] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.259832] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.259906] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.259983] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.260078] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.260155] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.260232] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.260302] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.260369] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.260434] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.260505] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.260579] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.260660] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.260738] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.260816] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.260891] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.260967] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.261040] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.261131] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.261233] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.261320] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.268231] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/sdm_test.cpp:39\x1b[m\x1b[K:\n'}
[2.268545] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.268736] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.268892] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.268988] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.269140] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.269234] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.269374] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.269450] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.269528] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.269604] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.269686] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.269770] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.269860] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.269947] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.270042] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.270129] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.270223] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.270301] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.270374] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.270453] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.270524] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.270595] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.270669] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.270749] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.270823] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.270891] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.270958] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.271024] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.271087] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.271153] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.271218] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.271285] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.271350] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.271416] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.271489] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.271555] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.277817] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.278055] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.278158] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.278237] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.278310] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.278397] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.278470] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.278542] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.278616] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.278697] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.278775] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.278849] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.286936] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test.cpp:41\x1b[m\x1b[K:\n'}
[2.287198] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.287300] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.287439] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.287521] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.287653] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.287741] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.287811] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.287946] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.288032] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.288161] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.288236] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.288303] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.288381] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.288451] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.288521] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.288590] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.288667] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.288735] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.288802] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.288879] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.288946] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.289017] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.289089] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.289159] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.289227] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.289294] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.289368] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.289439] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.289508] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.289579] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.289650] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.289720] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.289790] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.289858] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.289925] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.289991] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.296275] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.296499] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.296619] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.296714] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.296799] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.296877] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.296950] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.297023] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.297096] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.297168] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.297247] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.297320] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.303095] (-) TimerEvent: {}
[2.312267] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.312563] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test.cpp:285:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.312686] (ydlidar_sdk) StderrLine: {'line': b'  285 |        core::common::warn(\x1b[01;35m\x1b[K"module[%d] time[%lld]ms"\x1b[m\x1b[K, scan.moduleNum, dt);\n'}
[2.312777] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.312859] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test.cpp:287:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.312939] (ydlidar_sdk) StderrLine: {'line': b'  287 |         core::common::info(\x1b[01;35m\x1b[K"module[%d] time[%lld]ms"\x1b[m\x1b[K, scan.moduleNum, dt);\n'}
[2.313017] (ydlidar_sdk) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.322990] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_test2.cpp:8\x1b[m\x1b[K:\n'}
[2.323267] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.323369] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.323561] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.323654] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.323735] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.323947] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.324035] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.324109] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.324183] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.324358] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.324445] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.324514] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.324588] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.324754] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.324831] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.324916] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.325004] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.325148] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.325218] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.325291] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.325363] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.325447] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.325527] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.325600] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.325668] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.325738] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.325804] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.325870] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.325955] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.326043] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.326132] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.326202] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.326272] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.326342] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.326414] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.326481] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.333789] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.334089] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.334179] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.334258] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.334336] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.334413] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.334485] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.334560] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.334635] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.334706] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.334773] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.334842] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.340895] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.341183] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.341397] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/scl_test.cpp:34\x1b[m\x1b[K:\n'}
[2.341499] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.341755] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.341865] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.341963] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.342084] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.342236] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.342313] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.342380] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.342453] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.342531] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.342601] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.342668] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.342734] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.342801] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.342869] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.342939] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.343006] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.343080] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.343152] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.343226] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.343299] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.343368] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.343435] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.343499] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.343567] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.343631] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.343699] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.343765] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.343829] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.343903] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.343972] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.344038] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.344103] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.344168] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.344236] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.349346] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:6\x1b[m\x1b[K:\n'}
[2.349674] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.349866] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.350028] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.350137] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.350227] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.350317] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.350401] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.350599] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.350688] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.350763] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.350832] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.350909] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.350982] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.351056] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.351132] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.351204] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.351275] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.351341] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.351408] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.351475] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.351542] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.351610] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.351684] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.351763] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.351832] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.351901] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.351976] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.352047] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.352116] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.352191] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.352259] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.352324] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.352392] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.352459] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.352527] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.352591] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.370818] (ydlidar_sdk) StdoutLine: {'line': b'[ 61%] \x1b[32m\x1b[1mLinking CXX executable ../tri_and_gs_test\x1b[0m\n'}
[2.372350] (ydlidar_sdk) StdoutLine: {'line': b'[ 63%] \x1b[32m\x1b[1mLinking CXX executable ../et_test\x1b[0m\n'}
[2.375590] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.375818] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.375922] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.376007] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.376089] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.376169] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.376244] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.376321] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.376413] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.376492] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.376564] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.376635] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.377376] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.377533] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:105:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.377621] (ydlidar_sdk) StderrLine: {'line': b'  105 |     error(\x1b[01;35m\x1b[K"Error %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[2.377695] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[2.377960] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:114:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.378121] (ydlidar_sdk) StderrLine: {'line': b'  114 |       info(\x1b[01;35m\x1b[K"Scan received at [%.02f]Hz [%u] points in [%.03f]s"\x1b[m\x1b[K,\n'}
[2.378192] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.378261] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tia_test.cpp:121:13:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.378337] (ydlidar_sdk) StderrLine: {'line': b'  121 |       error(\x1b[01;35m\x1b[K"Failed to get lidar data"\x1b[m\x1b[K);\n'}
[2.378407] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.379779] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.380091] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.380312] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_restart.cpp:1\x1b[m\x1b[K:\n'}
[2.380462] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.380619] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.380708] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.380784] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.380870] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.380942] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.381018] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.381088] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.381172] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.381248] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.381318] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.381387] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.381453] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.381522] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.381591] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.381665] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.381735] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.381806] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.381885] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.381952] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.382025] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.382097] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.382179] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.382250] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.382326] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.382392] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.382458] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.382521] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.382586] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.382650] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.382718] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.382782] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.382846] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.382909] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.382974] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.403220] (-) TimerEvent: {}
[2.405655] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_test.cpp:40\x1b[m\x1b[K:\n'}
[2.405887] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.405987] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.406100] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.406199] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.406281] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.406387] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.406490] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.407041] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.407227] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.407318] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.407398] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.407480] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.407568] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.407651] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.408314] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.408500] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.408588] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.408674] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.408752] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.408851] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.408934] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.409608] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.409798] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.409884] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.409959] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.410050] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.410137] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.410226] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.410789] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.410962] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.411042] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.411111] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.411568] (ydlidar_sdk) StdoutLine: {'line': b'[ 65%] \x1b[32m\x1b[1mLinking CXX executable ../sdm_test\x1b[0m\n'}
[2.411803] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.411912] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.412001] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.412087] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.422086] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_ota.cpp:41\x1b[m\x1b[K:\n'}
[2.422450] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.422571] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.422787] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.422883] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.422974] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.423189] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.423289] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.423380] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.423466] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.423665] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.423750] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.423831] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.423947] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.424116] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.424198] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.424280] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.424368] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.424560] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.424643] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.424748] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.424834] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.424928] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.425025] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.425120] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.425210] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.425295] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.425376] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.425456] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.425538] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.425618] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.425691] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.425757] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.425824] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.425895] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.425990] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.426084] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.428675] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.428934] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.429025] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.429099] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.429172] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.429246] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.429319] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.429394] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.429470] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.429548] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.429620] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.429696] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.434277] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.434745] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.435003] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:40\x1b[m\x1b[K:\n'}
[2.435114] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.435214] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.435313] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.435397] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.435468] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.435552] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.435621] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.435687] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.435760] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.435829] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.435900] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.435972] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.436045] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.436115] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.436187] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.436255] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.436319] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.436386] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.436464] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.436533] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.436600] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.436666] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.436731] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.436802] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.436876] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.436940] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.437004] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.437068] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.437133] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.437196] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.437275] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.437348] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.437413] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.437479] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.437547] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.437618] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.437701] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.437775] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.437846] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.437916] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.437983] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.438067] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.438135] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.438204] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.438272] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.438354] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.438421] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.449790] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.450078] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tri_test.cpp:331:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.450211] (ydlidar_sdk) StderrLine: {'line': b'  331 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points scanFreq [%.02f]\\n",\n'}
[2.450309] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[2.450400] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.450487] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[2.450581] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[2.450671] (ydlidar_sdk) StderrLine: {'line': b'  332 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[2.450758] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[2.450846] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.450927] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.453664] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.454116] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.454333] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tea_test.cpp:38\x1b[m\x1b[K:\n'}
[2.454578] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.454677] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.454778] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.454875] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.454962] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.455070] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.455157] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.455241] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.455339] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.455424] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.455507] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.455587] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.455663] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.455762] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.455840] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.455913] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.455983] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.456056] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.456139] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.456212] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.456281] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.456367] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.456439] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.456508] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.456585] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.456652] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.456717] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.456785] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.456856] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.456919] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.456987] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.457052] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.457116] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.457182] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.457251] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.503380] (-) TimerEvent: {}
[2.540715] (ydlidar_sdk) StdoutLine: {'line': b'[ 65%] Built target et_test\n'}
[2.541042] (ydlidar_sdk) StdoutLine: {'line': b'[ 65%] Built target tri_and_gs_test\n'}
[2.549622] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/scl_test.cpp:40\x1b[m\x1b[K:\n'}
[2.549962] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.550084] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.550174] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.550266] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.550456] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.550550] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.550623] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.550694] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.550798] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.550978] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.551050] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.551118] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.551189] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.551255] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.551350] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.551503] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.551580] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.551644] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.551707] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.551770] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.551865] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.551992] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.552060] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.552127] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.552193] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.552259] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.552384] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.552498] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.552565] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.552651] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.552719] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.552838] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.552908] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.552974] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.553040] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.553102] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.553163] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target sdm18_test\x1b[0m\n'}
[2.553232] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tmini-sh_test\x1b[0m\n'}
[2.563292] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.563574] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.563679] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.563768] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.563843] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.563918] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.564013] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.564090] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.564159] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.564227] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.564295] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.564362] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.566591] (ydlidar_sdk) StdoutLine: {'line': b'[ 69%] \x1b[32mBuilding CXX object examples/CMakeFiles/sdm18_test.dir/sdm18_test.cpp.o\x1b[0m\n'}
[2.566806] (ydlidar_sdk) StdoutLine: {'line': b'[ 69%] \x1b[32mBuilding CXX object examples/CMakeFiles/tmini-sh_test.dir/tmini-sh_test.cpp.o\x1b[0m\n'}
[2.569224] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:41\x1b[m\x1b[K:\n'}
[2.569472] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.569567] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.569711] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.569827] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.569903] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.569977] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.570167] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.570251] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.570325] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.570396] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.570475] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.570616] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.570684] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.570747] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.570813] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.570946] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.571013] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.571075] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.571138] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571258] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.571371] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.571448] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.571521] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.571596] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.571665] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.571733] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.571801] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.571868] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.571940] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.572014] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.572091] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.572160] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.572226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.572295] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.572373] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.572440] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.575803] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tea_test.cpp:39\x1b[m\x1b[K:\n'}
[2.576069] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.576158] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.576294] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.576370] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.576440] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.576577] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.576648] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.576712] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.576849] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.576916] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.576979] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.577042] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.577109] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.577245] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.577315] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.577383] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.577450] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.577513] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.577577] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.577643] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.577709] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.577775] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.577852] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.578076] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[2.578150] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[2.578280] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[2.578351] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[2.578417] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.578484] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.578553] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.578627] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.578694] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.578760] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.578836] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[2.578912] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[2.578989] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[2.579078] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/scl_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.579154] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/scl_test.cpp:340:33:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<LaserPoint>::size_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.579231] (ydlidar_sdk) StderrLine: {'line': b'  340 |       printf("Scan received [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K] points stamp [%llu]\\n",\n'}
[2.579298] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[2.579367] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.579434] (ydlidar_sdk) StderrLine: {'line': b'      |                                 \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[2.579501] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[2.579564] (ydlidar_sdk) StderrLine: {'line': b'  341 |              \x1b[32m\x1b[Kscan.points.size()\x1b[m\x1b[K,\n'}
[2.579632] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K  \n'}
[2.579699] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.579768] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kstd::vector<LaserPoint>::size_type {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.579837] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/scl_test.cpp:340:53:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%llu\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Klong long unsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[Kuint64_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.579918] (ydlidar_sdk) StderrLine: {'line': b'  340 |       printf("Scan received [%llu] points stamp [\x1b[01;35m\x1b[K%llu\x1b[m\x1b[K]\\n",\n'}
[2.579987] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[01;35m\x1b[K~~~^\x1b[m\x1b[K\n'}
[2.580063] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.580132] (ydlidar_sdk) StderrLine: {'line': b'      |                                                     \x1b[01;35m\x1b[Klong long unsigned int\x1b[m\x1b[K\n'}
[2.580199] (ydlidar_sdk) StderrLine: {'line': b'      |                                                  \x1b[32m\x1b[K%lu\x1b[m\x1b[K\n'}
[2.580266] (ydlidar_sdk) StderrLine: {'line': b'  341 |              scan.points.size(),\n'}
[2.580331] (ydlidar_sdk) StderrLine: {'line': b'  342 |              \x1b[32m\x1b[Kscan.stamp\x1b[m\x1b[K);\n'}
[2.580396] (ydlidar_sdk) StderrLine: {'line': b'      |              \x1b[32m\x1b[K~~~~~~~~~~\x1b[m\x1b[K                              \n'}
[2.580462] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.580528] (ydlidar_sdk) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kuint64_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.580738] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.580858] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.580936] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.581004] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.581076] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.581146] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.581219] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.581295] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.581368] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.581441] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.581514] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.581583] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.586462] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.586721] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.586821] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[2.586896] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.586967] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[2.587034] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.587103] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[2.587177] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.587244] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[2.587315] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.587384] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[2.587453] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.592632] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.592923] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:228:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.593119] (ydlidar_sdk) StderrLine: {'line': b'  228 |       core::common::error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[2.593248] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.593332] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:235:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.593408] (ydlidar_sdk) StderrLine: {'line': b'  235 |       core::common::error(\x1b[01;35m\x1b[K"Fail to turn on"\x1b[m\x1b[K);\n'}
[2.593484] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.593558] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:244:28:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.593632] (ydlidar_sdk) StderrLine: {'line': b'  244 |         core::common::info(\x1b[01;35m\x1b[K"Module [%d] [%d] points in [%.02f]Hz"\x1b[m\x1b[K,\n'}
[2.593704] (ydlidar_sdk) StderrLine: {'line': b'      |                            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.593776] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:251:29:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.593848] (ydlidar_sdk) StderrLine: {'line': b'  251 |         core::common::error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[2.593918] (ydlidar_sdk) StderrLine: {'line': b'      |                             \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.593985] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/gs_restart.cpp:259:24:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.594072] (ydlidar_sdk) StderrLine: {'line': b'  259 |     core::common::warn(\x1b[01;35m\x1b[K"Test count %u"\x1b[m\x1b[K, ++count);\n'}
[2.594141] (ydlidar_sdk) StderrLine: {'line': b'      |                        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.597252] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tea_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.597485] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tea_test.cpp:280:26:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[2.597585] (ydlidar_sdk) StderrLine: {'line': b'  280 |       core::common::info(\x1b[01;35m\x1b[K"[%u] points Stamp [%u]ms"\x1b[m\x1b[K,\n'}
[2.597661] (ydlidar_sdk) StderrLine: {'line': b'      |                          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[2.603512] (-) TimerEvent: {}
[2.634206] (ydlidar_sdk) StdoutLine: {'line': b'[ 70%] \x1b[32m\x1b[1mLinking CXX executable ../tia_test\x1b[0m\n'}
[2.668339] (ydlidar_sdk) StdoutLine: {'line': b'[ 72%] \x1b[32m\x1b[1mLinking CXX executable ../tri_restart\x1b[0m\n'}
[2.703637] (-) TimerEvent: {}
[2.708636] (ydlidar_sdk) StdoutLine: {'line': b'[ 74%] \x1b[32m\x1b[1mLinking CXX executable ../gs_test\x1b[0m\n'}
[2.716843] (ydlidar_sdk) StdoutLine: {'line': b'[ 74%] Built target sdm_test\n'}
[2.750561] (ydlidar_sdk) StdoutLine: {'line': b'[ 76%] \x1b[32m\x1b[1mLinking CXX executable ../gs_ota\x1b[0m\n'}
[2.750927] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target lidar_c_api_test\x1b[0m\n'}
[2.760908] (ydlidar_sdk) StdoutLine: {'line': b'[ 78%] \x1b[32m\x1b[1mLinking CXX executable ../gs_test2\x1b[0m\n'}
[2.763373] (ydlidar_sdk) StdoutLine: {'line': b'[ 80%] \x1b[32m\x1b[1mLinking CXX executable ../tri_test\x1b[0m\n'}
[2.767848] (ydlidar_sdk) StdoutLine: {'line': b'[ 81%] \x1b[32mBuilding C object examples/CMakeFiles/lidar_c_api_test.dir/lidar_c_api_test.c.o\x1b[0m\n'}
[2.796269] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[Kcc1:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcommand line option \xe2\x80\x98\x1b[01m\x1b[K-std=c++11\x1b[m\x1b[K\xe2\x80\x99 is valid for C++/ObjC++ but not for C\n'}
[2.803798] (-) TimerEvent: {}
[2.806158] (ydlidar_sdk) StdoutLine: {'line': b'[ 83%] \x1b[32m\x1b[1mLinking CXX executable ../tea_test\x1b[0m\n'}
[2.839346] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] \x1b[32m\x1b[1mLinking CXX executable ../scl_test\x1b[0m\n'}
[2.851484] (ydlidar_sdk) StdoutLine: {'line': b'[ 85%] Built target tri_restart\n'}
[2.861579] (ydlidar_sdk) StdoutLine: {'line': b'[ 87%] \x1b[32m\x1b[1mLinking CXX executable ../lidar_c_api_test\x1b[0m\n'}
[2.872398] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tmini_test\x1b[0m\n'}
[2.880237] (ydlidar_sdk) StdoutLine: {'line': b'[ 87%] Built target tia_test\n'}
[2.881207] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[2.881427] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[2.881494] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/sdm18_test.cpp:34\x1b[m\x1b[K:\n'}
[2.881537] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[2.881580] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.881639] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[2.881680] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.881719] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.881758] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.881799] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.881838] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.881883] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[2.881921] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[2.881960] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[2.882012] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[2.882068] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.882106] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[2.882144] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[2.882180] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.882217] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.882421] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.882542] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.882611] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.882683] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.882735] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.882802] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.882854] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.882909] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.882964] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.883021] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.883069] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.883116] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.883165] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[2.883224] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[2.883271] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[2.883316] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[2.883360] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[2.883407] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[2.903938] (-) TimerEvent: {}
[2.909473] (ydlidar_sdk) StdoutLine: {'line': b'[ 89%] \x1b[32mBuilding CXX object examples/CMakeFiles/tmini_test.dir/tmini_test.cpp.o\x1b[0m\n'}
[2.925224] (ydlidar_sdk) StdoutLine: {'line': b'\x1b[35m\x1b[1mScanning dependencies of target tof_test\x1b[0m\n'}
[2.969502] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] \x1b[32m\x1b[1mLinking CXX executable ../gs_restart\x1b[0m\n'}
[2.969807] (ydlidar_sdk) StdoutLine: {'line': b'[ 90%] Built target gs_test\n'}
[2.989938] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] \x1b[32mBuilding CXX object examples/CMakeFiles/tof_test.dir/tof_test.cpp.o\x1b[0m\n'}
[2.990182] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target tri_test\n'}
[3.004081] (-) TimerEvent: {}
[3.010534] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target gs_test2\n'}
[3.029187] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target tea_test\n'}
[3.067148] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target scl_test\n'}
[3.067608] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.067744] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.067802] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:5\x1b[m\x1b[K:\n'}
[3.067853] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.067906] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.067963] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.068011] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.068059] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.068105] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.068153] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.068199] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.068260] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.068306] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.068346] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.068386] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.068428] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.068473] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.068518] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.068562] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.068607] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.068653] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.068709] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.068762] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.068809] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.068854] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.068904] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.068952] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.069002] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.069046] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.069089] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.069133] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.069179] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.069226] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.069277] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.069323] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.069368] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.069422] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.069469] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.091300] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target lidar_c_api_test\n'}
[3.091503] (ydlidar_sdk) StdoutLine: {'line': b'[ 92%] Built target gs_ota\n'}
[3.104194] (-) TimerEvent: {}
[3.132550] (ydlidar_sdk) StdoutLine: {'line': b'[ 94%] \x1b[32m\x1b[1mLinking CXX executable ../sdm18_test\x1b[0m\n'}
[3.142248] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:6\x1b[m\x1b[K:\n'}
[3.142527] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.142617] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.142680] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.142737] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.142790] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.142843] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.142895] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.143018] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.143076] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.143128] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.143176] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.143294] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.143346] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.143391] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.143435] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.143495] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.143546] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.143595] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.143640] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.143687] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.143734] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.143786] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.143834] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.143886] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.143933] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.143983] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.144035] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.144086] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.144134] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.144185] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.144236] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.144286] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.144336] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.144386] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.144450] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.144503] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.148754] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.148947] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.149035] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.149085] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149135] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.149186] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149234] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.149281] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149335] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.149396] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.149456] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.149515] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.152655] (ydlidar_sdk) StdoutLine: {'line': b'[ 94%] Built target gs_restart\n'}
[3.154649] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.154869] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:143:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.154940] (ydlidar_sdk) StderrLine: {'line': b'  143 |     error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[3.154993] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.155047] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:151:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.155099] (ydlidar_sdk) StderrLine: {'line': b'  151 |     warn(\x1b[01;35m\x1b[K"Fail to get pitch angle"\x1b[m\x1b[K);\n'}
[3.155206] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.155262] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:155:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.155319] (ydlidar_sdk) StderrLine: {'line': b'  155 |     info(\x1b[01;35m\x1b[K"Pitch angle [%.02f]\xc2\xb0"\x1b[m\x1b[K, pitch);\n'}
[3.155365] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.155409] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:162:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.155458] (ydlidar_sdk) StderrLine: {'line': b'  162 |     error(\x1b[01;35m\x1b[K"Fail to start %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[3.155502] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.155546] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:171:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.155598] (ydlidar_sdk) StderrLine: {'line': b'  171 |       info(\x1b[01;35m\x1b[K"[%u] points [%.02f(%.02f)]Hz"\x1b[m\x1b[K,\n'}
[3.155641] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.155684] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini-sh_test.cpp:184:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.155726] (ydlidar_sdk) StderrLine: {'line': b'  184 |         error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[3.155769] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.204310] (-) TimerEvent: {}
[3.231664] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] \x1b[32m\x1b[1mLinking CXX executable ../tmini-sh_test\x1b[0m\n'}
[3.247063] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target sdm18_test\n'}
[3.297443] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.297738] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.297828] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:5\x1b[m\x1b[K:\n'}
[3.297884] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.297935] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.297988] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.298056] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.298109] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.298165] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.298217] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.298266] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.298330] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.298382] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.298430] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.298480] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.298530] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.298579] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.298628] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.298674] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.298719] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.298765] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.298825] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.298872] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.298920] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.298964] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.299010] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.299055] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.299105] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.299152] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.299198] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.299249] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.299297] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.299340] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.299390] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.299437] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.299479] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.299526] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.299573] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.304436] (-) TimerEvent: {}
[3.317538] (ydlidar_sdk) StdoutLine: {'line': b'[ 96%] Built target tmini-sh_test\n'}
[3.344848] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/DriverInterface.h:5\x1b[m\x1b[K,\n'}
[3.345097] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/src/CYdLidar.h:48\x1b[m\x1b[K,\n'}
[3.345190] (ydlidar_sdk) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:38\x1b[m\x1b[K:\n'}
[3.345244] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kint ydlidar::core::base::Thread::join(long unsigned int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.345298] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:135:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.345355] (ydlidar_sdk) StderrLine: {'line': b'  135 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d]\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s);\n'}
[3.345405] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                          \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.345456] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K                          \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.345507] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K               \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.345556] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.345731] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:137:46:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.345797] (ydlidar_sdk) StderrLine: {'line': b'  137 |           printf("[YDLIDAR DEBUG] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] ready to cancel[%d] time[%u]\\n",\n'}
[3.345846] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[01;35m\x1b[K~^\x1b[m\x1b[K\n'}
[3.345892] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[K|\x1b[m\x1b[K\n'}
[3.345935] (ydlidar_sdk) StderrLine: {'line': b'      |                                              \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K\n'}
[3.345981] (ydlidar_sdk) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.346034] (ydlidar_sdk) StderrLine: {'line': b'  138 |             \x1b[32m\x1b[K_handle\x1b[m\x1b[K, s, getms() - t);\n'}
[3.346082] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K                           \n'}
[3.346132] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.346176] (ydlidar_sdk) StderrLine: {'line': b'      |             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.346220] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:141:42:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.346274] (ydlidar_sdk) StderrLine: {'line': b'  141 |             printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled in other thread\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.346322] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.346369] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.346417] (ydlidar_sdk) StderrLine: {'line': b'      |                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K                             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.346463] (ydlidar_sdk) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.346508] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:146:74:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 3 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.346561] (ydlidar_sdk) StderrLine: {'line': b'  146 |             fprintf(stderr, "[YDLIDAR] An error occurred while thread[0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] cancelled!\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.346609] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                 \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.346663] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[K|\x1b[m\x1b[K                 \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.346709] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                          \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K      \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.346758] (ydlidar_sdk) StderrLine: {'line': b'      |                                                                         \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.346807] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/base/thread.h:150:40:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat \xe2\x80\x98\x1b[01m\x1b[K%X\x1b[m\x1b[K\xe2\x80\x99 expects argument of type \xe2\x80\x98\x1b[01m\x1b[Kunsigned int\x1b[m\x1b[K\xe2\x80\x99, but argument 2 has type \xe2\x80\x98\x1b[01m\x1b[K_size_t\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Klong unsigned int\x1b[m\x1b[K\xe2\x80\x99} [\x1b[01;35m\x1b[K-Wformat=\x1b[m\x1b[K]\n'}
[3.346859] (ydlidar_sdk) StderrLine: {'line': b'  150 |           printf("[YDLIDAR] Thread [0x\x1b[01;35m\x1b[K%X\x1b[m\x1b[K] has been canceled\\n", \x1b[32m\x1b[K_handle\x1b[m\x1b[K);\n'}
[3.346907] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[01;35m\x1b[K~^\x1b[m\x1b[K                        \x1b[32m\x1b[K~~~~~~~\x1b[m\x1b[K\n'}
[3.346955] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[K|\x1b[m\x1b[K                        \x1b[32m\x1b[K|\x1b[m\x1b[K\n'}
[3.347001] (ydlidar_sdk) StderrLine: {'line': b'      |                                        \x1b[01;35m\x1b[Kunsigned int\x1b[m\x1b[K             \x1b[32m\x1b[K_size_t {aka long unsigned int}\x1b[m\x1b[K\n'}
[3.347050] (ydlidar_sdk) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[K%lX\x1b[m\x1b[K\n'}
[3.347204] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:\x1b[m\x1b[K In lambda function:\n'}
[3.347298] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:190:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest_header\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.347351] (ydlidar_ros2_driver) StderrLine: {'line': b'  190 |     [&laser](\x1b[01;35m\x1b[Kconst std::shared_ptr<rmw_request_id_t> request_header\x1b[m\x1b[K,\n'}
[3.347401] (ydlidar_ros2_driver) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.347446] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:191:56:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kreq\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.347501] (ydlidar_ros2_driver) StderrLine: {'line': b'  191 |   \x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> req\x1b[m\x1b[K,\n'}
[3.347549] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[3.347597] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:192:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kresponse\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.347644] (ydlidar_ros2_driver) StderrLine: {'line': b'  192 |   \x1b[01;35m\x1b[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response\x1b[m\x1b[K) -> bool\n'}
[3.347696] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.350000] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:\x1b[m\x1b[K In lambda function:\n'}
[3.350178] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:200:54:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Krequest_header\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.350254] (ydlidar_ros2_driver) StderrLine: {'line': b'  200 |     [&laser](\x1b[01;35m\x1b[Kconst std::shared_ptr<rmw_request_id_t> request_header\x1b[m\x1b[K,\n'}
[3.350308] (ydlidar_ros2_driver) StderrLine: {'line': b'      |              \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.350357] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:201:56:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kreq\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.350407] (ydlidar_ros2_driver) StderrLine: {'line': b'  201 |   \x1b[01;35m\x1b[Kconst std::shared_ptr<std_srvs::srv::Empty::Request> req\x1b[m\x1b[K,\n'}
[3.350451] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[3.350495] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:202:51:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused parameter \xe2\x80\x98\x1b[01m\x1b[Kresponse\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-parameter\x1b[m\x1b[K]\n'}
[3.350543] (ydlidar_ros2_driver) StderrLine: {'line': b'  202 |   \x1b[01;35m\x1b[Kstd::shared_ptr<std_srvs::srv::Empty::Response> response\x1b[m\x1b[K) -> bool\n'}
[3.350588] (ydlidar_ros2_driver) StderrLine: {'line': b'      |   \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~\x1b[m\x1b[K\n'}
[3.352816] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.352976] (ydlidar_ros2_driver) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_ros2_driver/src/ydlidar_ros2_driver_node.cpp:235:21:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kunused variable \xe2\x80\x98\x1b[01m\x1b[Kp\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wunused-variable\x1b[m\x1b[K]\n'}
[3.353045] (ydlidar_ros2_driver) StderrLine: {'line': b'  235 |         const auto& \x1b[01;35m\x1b[Kp\x1b[m\x1b[K = scan.points.at(i);\n'}
[3.353098] (ydlidar_ros2_driver) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.386651] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:6\x1b[m\x1b[K:\n'}
[3.386835] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.386894] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.387005] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.387052] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.387096] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.387142] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.387187] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.387230] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.387276] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.387321] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.387365] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.387462] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.387513] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.387558] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.387603] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.387648] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.387693] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.387737] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.387782] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.387826] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.387869] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.387969] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.388022] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.388069] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.388114] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.388158] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.388246] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.388287] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.388329] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.388371] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.388413] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.388454] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.388494] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.388537] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.388581] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.388623] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.396971] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.397111] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.397167] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.397217] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.397259] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.397306] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.397349] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.397389] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.397430] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.397469] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.397510] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.397550] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.404541] (-) TimerEvent: {}
[3.405268] (ydlidar_sdk) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:40\x1b[m\x1b[K:\n'}
[3.405506] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debug(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.405607] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.405668] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.405722] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.405772] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:105:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.405825] (ydlidar_sdk) StderrLine: {'line': b'  105 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.405875] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.405923] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::info(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.405972] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.406032] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.406082] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.406130] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:115:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.406179] (ydlidar_sdk) StderrLine: {'line': b'  115 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.406226] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.406269] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::warn(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.406316] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.406364] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.406411] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.406458] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:125:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.406507] (ydlidar_sdk) StderrLine: {'line': b'  125 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.406554] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.406675] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::error(char*, ...)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.406737] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:96:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.406925] (ydlidar_sdk) StderrLine: {'line': b'   96 |   printf(\x1b[01;35m\x1b[Kbuff\x1b[m\x1b[K); \\\n'}
[3.406981] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~\x1b[m\x1b[K\n'}
[3.407029] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:136:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kin expansion of macro \xe2\x80\x98\x1b[01m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\xe2\x80\x99\n'}
[3.407076] (ydlidar_sdk) StderrLine: {'line': b'  136 |   \x1b[01;36m\x1b[KFORMAT_STDOUT\x1b[m\x1b[K\n'}
[3.407121] (ydlidar_sdk) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.407165] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.407215] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:143:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.407261] (ydlidar_sdk) StderrLine: {'line': b'  143 |     error(\x1b[01;35m\x1b[K"Fail to initialize %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[3.407304] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.407349] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:151:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.407403] (ydlidar_sdk) StderrLine: {'line': b'  151 |     warn(\x1b[01;35m\x1b[K"Fail to get pitch angle"\x1b[m\x1b[K);\n'}
[3.407447] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.407494] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::debugh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.407539] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:150:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.407583] (ydlidar_sdk) StderrLine: {'line': b'  150 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.407627] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.407670] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:155:10:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.407713] (ydlidar_sdk) StderrLine: {'line': b'  155 |     info(\x1b[01;35m\x1b[K"Pitch angle [%.02f]\xc2\xb0"\x1b[m\x1b[K, pitch);\n'}
[3.407758] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.407802] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:162:11:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.407854] (ydlidar_sdk) StderrLine: {'line': b'  162 |     error(\x1b[01;35m\x1b[K"Fail to start %s"\x1b[m\x1b[K, laser.DescribeError());\n'}
[3.407899] (ydlidar_sdk) StderrLine: {'line': b'      |           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.407943] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kvoid ydlidar::core::common::infoh(const uint8_t*, int, const char*)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.407988] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:166:20:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kformat not a string literal and no format arguments [\x1b[01;35m\x1b[K-Wformat-security\x1b[m\x1b[K]\n'}
[3.408033] (ydlidar_sdk) StderrLine: {'line': b'  166 |       printf(prefix\x1b[01;35m\x1b[K)\x1b[m\x1b[K;\n'}
[3.408076] (ydlidar_sdk) StderrLine: {'line': b'      |                    \x1b[01;35m\x1b[K^\x1b[m\x1b[K\n'}
[3.408119] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:171:12:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.408166] (ydlidar_sdk) StderrLine: {'line': b'  171 |       info(\x1b[01;35m\x1b[K"[%u] points [%.02f(%.02f)]Hz"\x1b[m\x1b[K,\n'}
[3.408209] (ydlidar_sdk) StderrLine: {'line': b'      |            \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.408253] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tmini_test.cpp:184:15:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.408300] (ydlidar_sdk) StderrLine: {'line': b'  184 |         error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[3.408346] (ydlidar_sdk) StderrLine: {'line': b'      |               \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.410790] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kbool ydlidar::core::common::printfDeviceInfo(const device_info&, int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.410932] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/./core/common/ydlidar_help.h:1115:8:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.410995] (ydlidar_sdk) StderrLine: {'line': b' 1115 |   info(\x1b[01;35m\x1b[K"%s device info\\n"\x1b[m\x1b[K\n'}
[3.411044] (ydlidar_sdk) StderrLine: {'line': b'      |        \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.411088] (ydlidar_sdk) StderrLine: {'line': b' 1116 | \x1b[01;35m\x1b[K         "Firmware version: %u.%u\\n"\x1b[m\x1b[K\n'}
[3.411134] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.411176] (ydlidar_sdk) StderrLine: {'line': b' 1117 | \x1b[01;35m\x1b[K         "Hardware version: %u\\n"\x1b[m\x1b[K\n'}
[3.411219] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.411263] (ydlidar_sdk) StderrLine: {'line': b' 1118 | \x1b[01;35m\x1b[K         "Model: %s\\n"\x1b[m\x1b[K\n'}
[3.411306] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.411348] (ydlidar_sdk) StderrLine: {'line': b' 1119 | \x1b[01;35m\x1b[K         "Serial: %s"\x1b[m\x1b[K,\n'}
[3.411391] (ydlidar_sdk) StderrLine: {'line': b'      |          \x1b[01;35m\x1b[K~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.417519] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:\x1b[m\x1b[K In function \xe2\x80\x98\x1b[01m\x1b[Kint main(int, char**)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[3.417705] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:288:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.417790] (ydlidar_sdk) StderrLine: {'line': b'  288 |           core::common::warn(\x1b[01;35m\x1b[K"first %llu last %llu size %lu"\x1b[m\x1b[K,\n'}
[3.417844] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.417893] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:293:30:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.417943] (ydlidar_sdk) StderrLine: {'line': b'  293 |           core::common::info(\x1b[01;35m\x1b[K"first %llu last %llu size %lu"\x1b[m\x1b[K,\n'}
[3.417987] (ydlidar_sdk) StderrLine: {'line': b'      |                              \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.418043] (ydlidar_sdk) StderrLine: {'line': b'\x1b[01m\x1b[K/home/ankledogg/ydlidar_ros2_ws/src/YDLidar-SDK/examples/tof_test.cpp:302:27:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[KISO C++ forbids converting a string constant to \xe2\x80\x98\x1b[01m\x1b[Kchar*\x1b[m\x1b[K\xe2\x80\x99 [\x1b[01;35m\x1b[K-Wwrite-strings\x1b[m\x1b[K]\n'}
[3.418092] (ydlidar_sdk) StderrLine: {'line': b'  302 |       core::common::error(\x1b[01;35m\x1b[K"Failed to get Lidar Data"\x1b[m\x1b[K);\n'}
[3.418136] (ydlidar_sdk) StderrLine: {'line': b'      |                           \x1b[01;35m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[3.504656] (-) TimerEvent: {}
[3.514316] (ydlidar_sdk) StdoutLine: {'line': b'[ 98%] \x1b[32m\x1b[1mLinking CXX executable ../tmini_test\x1b[0m\n'}
[3.536713] (ydlidar_sdk) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ../tof_test\x1b[0m\n'}
[3.604776] (-) TimerEvent: {}
[3.605951] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target tmini_test\n'}
[3.629923] (ydlidar_sdk) StdoutLine: {'line': b'[100%] Built target tof_test\n'}
[3.638398] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[3.639236] (ydlidar_sdk) JobProgress: {'identifier': 'ydlidar_sdk', 'progress': 'install'}
[3.646449] (ydlidar_sdk) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_sdk'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003')]), 'shell': False}
[3.654138] (ydlidar_sdk) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[3.654418] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/datatype.h\n'}
[3.654660] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/locker.h\n'}
[3.654758] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/thread.h\n'}
[3.654830] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/timer.h\n'}
[3.654899] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/typedef.h\n'}
[3.654963] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/utils.h\n'}
[3.655143] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/v8stdint.h\n'}
[3.655316] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/base/ydlidar.h\n'}
[3.655421] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/ChannelDevice.h\n'}
[3.655516] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/DriverInterface.h\n'}
[3.655585] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/ydlidar_datatype.h\n'}
[3.655684] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/ydlidar_def.h\n'}
[3.655765] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/ydlidar_help.h\n'}
[3.655853] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/common/ydlidar_protocol.h\n'}
[3.655931] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/json/cJSON.h\n'}
[3.656014] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/math/angles.h\n'}
[3.656082] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/network/ActiveSocket.h\n'}
[3.656168] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/network/PassiveSocket.h\n'}
[3.656233] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/network/SimpleSocket.h\n'}
[3.656298] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/network/StatTimer.h\n'}
[3.656362] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/serial/common.h\n'}
[3.656425] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/serial/serial.h\n'}
[3.656488] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/serial/impl/unix/lock.h\n'}
[3.656561] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/serial/impl/unix/unix.h\n'}
[3.656624] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/core/serial/impl/unix/unix_serial.h\n'}
[3.656687] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/CYdLidar.h\n'}
[3.656750] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/DTSLidarDriver.h\n'}
[3.656813] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/ETLidarDriver.h\n'}
[3.656875] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/GSLidarDriver.h\n'}
[3.656937] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/SDMLidarDriver.h\n'}
[3.656998] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/TiaLidarDriver.h\n'}
[3.657058] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/YDlidarDriver.h\n'}
[3.657124] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/ydlidar_sdk.h\n'}
[3.657190] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/filters/FilterInterface.h\n'}
[3.657251] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/filters/NoiseFilter.h\n'}
[3.657312] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/src/filters/StrongLightFilter.h\n'}
[3.657373] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/include/ydlidar_config.h\n'}
[3.657434] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/lib/libydlidar_sdk.a\n'}
[3.657657] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/lib/pkgconfig/YDLIDAR_SDK.pc\n'}
[3.657740] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfig.cmake\n'}
[3.657832] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkTargets.cmake\n'}
[3.657918] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/lib/cmake/ydlidar_sdk/ydlidar_sdkConfigVersion.cmake\n'}
[3.657982] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/FindYDLIDAR_SDK.cmake\n'}
[3.658090] (ydlidar_sdk) StdoutLine: {'line': b'-- Up-to-date: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK\n'}
[3.658178] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/cmake_uninstall.cmake.in\n'}
[3.658268] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfigVersion.cmake.in\n'}
[3.658332] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PkgConfig.pc.in\n'}
[3.658398] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common\n'}
[3.658473] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_base.cmake\n'}
[3.658533] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/common/ydlidar_parse.cmake\n'}
[3.658597] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/FindPackage.cmake.in\n'}
[3.658660] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/install_package.cmake\n'}
[3.658724] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/script_show_final_summary.cmake\n'}
[3.658828] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/PackageConfig.cmake.in\n'}
[3.658889] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/LICENSE.txt\n'}
[3.658949] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/README.md\n'}
[3.659023] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc\n'}
[3.659084] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart\n'}
[3.659145] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/ydlidar_sdk_software_installation_guide.md\n'}
[3.659219] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/quickstart/README.md\n'}
[3.659297] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials\n'}
[3.659357] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_network_adapter_tutorial_c++.md\n'}
[3.659431] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c.md\n'}
[3.659585] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_c++.md\n'}
[3.659764] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/writing_lidar_tutorial_python.md\n'}
[3.659930] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/tutorials/examine_the_simple_lidar_tutorial.md\n'}
[3.660086] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Diagram.md\n'}
[3.660262] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Tutorials.md\n'}
[3.660439] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/README.md\n'}
[3.660616] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs\n'}
[3.660692] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs.md\n'}
[3.660819] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs_cn.md\n'}
[3.660998] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/README.md\n'}
[3.661192] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Hardware_FAQs.md\n'}
[3.661372] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs.md\n'}
[3.661522] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/General_FAQs_cn.md\n'}
[3.661702] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/FAQs/Software_FAQs_cn.md\n'}
[3.661853] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar_SDK_Communication_Protocol.pdf\n'}
[3.664703] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto\n'}
[3.664770] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_gerenrate_vs_project_by_cmake.md\n'}
[3.664892] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_udev_rules.md\n'}
[3.665075] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_csharp_project.md\n'}
[3.665252] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/README.md\n'}
[3.665431] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_solve_slow_pull_from_cn.md\n'}
[3.665609] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images\n'}
[3.665691] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_init.png\n'}
[3.665992] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ydlidar_lidar_monitor.png\n'}
[3.667151] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/cpack.png\n'}
[3.667750] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_build.png\n'}
[3.668277] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sdk_scanning.png\n'}
[3.668823] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_library.png\n'}
[3.669257] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode\n'}
[3.669319] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/run_tasks.jpg\n'}
[3.672829] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/vscode/tasks.png\n'}
[3.675905] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_exception.png\n'}
[3.676623] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB0.png\n'}
[3.677075] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_running.png\n'}
[3.677636] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/ttyUSB1.png\n'}
[3.678242] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/sequence.png\n'}
[3.678741] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/images/csharp_project.png\n'}
[3.679219] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_install.md\n'}
[3.679399] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_create_a_pull.md\n'}
[3.679560] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/howto/how_to_build_and_debug_using_vscode.md\n'}
[3.679673] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/Dataset.md\n'}
[3.679846] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.pdf\n'}
[3.681418] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLIDAR_SDK_API_for_Developers.md\n'}
[3.681933] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images\n'}
[3.681997] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/FlowChart.png\n'}
[3.682547] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_init.png\n'}
[3.682878] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.png\n'}
[3.683059] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_scanning.png\n'}
[3.683591] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame_intensity.png\n'}
[3.684197] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/frame.png\n'}
[3.684825] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/YDLidar.jpg\n'}
[3.685267] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/system_workflow.png\n'}
[3.686128] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/communication_mechanism.png\n'}
[3.686843] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/angle_q2.png\n'}
[3.687170] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sequence.png\n'}
[3.687682] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/EAI.png\n'}
[3.689967] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/images/sdk_architecture.png\n'}
[3.690561] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.md\n'}
[3.690807] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/SDK.pdf\n'}
[3.697894] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/share/YDLIDAR_SDK/doc/YDLidar-SDK-Communication-Protocol.html\n'}
[3.698855] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/startup/initenv.sh\n'}
[3.700462] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/et_test\n'}
[3.701297] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/gs_ota\n'}
[3.702064] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/gs_restart\n'}
[3.702955] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/gs_test\n'}
[3.703904] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/gs_test2\n'}
[3.704788] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/scl_test\n'}
[3.704825] (-) TimerEvent: {}
[3.705754] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/sdm18_test\n'}
[3.706699] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/sdm_test\n'}
[3.707240] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tea_test\n'}
[3.707940] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tia_test\n'}
[3.708413] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tmini-sh_test\n'}
[3.709045] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tmini_test\n'}
[3.709491] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tof_test\n'}
[3.710184] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tri_and_gs_test\n'}
[3.710814] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tri_restart\n'}
[3.711374] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/tri_test\n'}
[3.711980] (ydlidar_sdk) StdoutLine: {'line': b'-- Installing: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_sdk/bin/lidar_c_api_test\n'}
[3.714012] (ydlidar_sdk) CommandEnded: {'returncode': 0}
[3.723458] (ydlidar_sdk) JobEnded: {'identifier': 'ydlidar_sdk', 'rc': 0}
[3.805066] (-) TimerEvent: {}
[3.905439] (-) TimerEvent: {}
[4.005815] (-) TimerEvent: {}
[4.106200] (-) TimerEvent: {}
[4.206576] (-) TimerEvent: {}
[4.303730] (ydlidar_x3_ros) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_x3_node\x1b[0m\n'}
[4.306670] (-) TimerEvent: {}
[4.406999] (-) TimerEvent: {}
[4.415329] (ydlidar_x3_ros) StdoutLine: {'line': b'[100%] Built target ydlidar_x3_node\n'}
[4.422346] (ydlidar_x3_ros) CommandEnded: {'returncode': 0}
[4.424236] (ydlidar_x3_ros) JobProgress: {'identifier': 'ydlidar_x3_ros', 'progress': 'install'}
[4.424331] (ydlidar_x3_ros) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_x3_ros'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[4.429021] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[4.429278] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Execute custom install script\n'}
[4.429527] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/lib/ydlidar_x3_ros/ydlidar_x3_node\n'}
[4.435263] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ament_index/resource_index/package_run_dependencies/ydlidar_x3_ros\n'}
[4.440533] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ament_index/resource_index/parent_prefix_path/ydlidar_x3_ros\n'}
[4.445923] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/environment/ament_prefix_path.sh\n'}
[4.451196] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/environment/ament_prefix_path.dsv\n'}
[4.456707] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/environment/path.sh\n'}
[4.462368] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/environment/path.dsv\n'}
[4.467828] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/local_setup.bash\n'}
[4.472934] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/local_setup.sh\n'}
[4.478253] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/local_setup.zsh\n'}
[4.483586] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/local_setup.dsv\n'}
[4.488714] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/package.dsv\n'}
[4.494155] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ament_index/resource_index/packages/ydlidar_x3_ros\n'}
[4.499493] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/cmake/ydlidar_x3_rosConfig.cmake\n'}
[4.504503] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/cmake/ydlidar_x3_rosConfig-version.cmake\n'}
[4.507188] (-) TimerEvent: {}
[4.509951] (ydlidar_x3_ros) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_x3_ros/share/ydlidar_x3_ros/package.xml\n'}
[4.516795] (ydlidar_x3_ros) CommandEnded: {'returncode': 0}
[4.523719] (ydlidar_x3_ros) JobEnded: {'identifier': 'ydlidar_x3_ros', 'rc': 0}
[4.607380] (-) TimerEvent: {}
[4.673045] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 75%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_ros2_driver_node\x1b[0m\n'}
[4.707569] (-) TimerEvent: {}
[4.792917] (ydlidar_ros2_driver) StdoutLine: {'line': b'[ 75%] Built target ydlidar_ros2_driver_node\n'}
[4.807745] (-) TimerEvent: {}
[4.908046] (-) TimerEvent: {}
[5.008362] (-) TimerEvent: {}
[5.108675] (-) TimerEvent: {}
[5.208996] (-) TimerEvent: {}
[5.238143] (ydlidar_ros2_driver) StdoutLine: {'line': b'[100%] \x1b[32m\x1b[1mLinking CXX executable ydlidar_ros2_driver_client\x1b[0m\n'}
[5.309195] (-) TimerEvent: {}
[5.371528] (ydlidar_ros2_driver) StdoutLine: {'line': b'[100%] Built target ydlidar_ros2_driver_client\n'}
[5.377826] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[5.378284] (ydlidar_ros2_driver) JobProgress: {'identifier': 'ydlidar_ros2_driver', 'progress': 'install'}
[5.378472] (ydlidar_ros2_driver) Command: {'cmd': ['/usr/bin/cmake', '--install', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver'], 'cwd': '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver', 'env': OrderedDict([('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_PH:en'), ('USER', 'ankledogg'), ('SSH_AGENT_PID', '1364'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '2'), ('LD_LIBRARY_PATH', '/opt/ros/foxy/opt/yaml_cpp_vendor/lib:/opt/ros/foxy/opt/rviz_ogre_vendor/lib:/opt/ros/foxy/lib/x86_64-linux-gnu:/opt/ros/foxy/lib'), ('HOME', '/home/ankledogg'), ('OLDPWD', '/home/ankledogg/ydlidar_ros2_ws/src/ydlidar_x3_ros'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('MANAGERPID', '1259'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('TERMINATOR_DBUS_NAME', 'net.tenshu.Terminator21a9d5db22c73a993ff0b42f64b396873'), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/ankledogg/ydlidar_ros2_ws/install'), ('ROS_DISTRO', 'foxy'), ('LOGNAME', 'ankledogg'), ('JOURNAL_STREAM', '8:42455'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'ankledogg'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/foxy/bin:/home/ankledogg/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('SESSION_MANAGER', 'local/ankledogg-Thin-GF63-12VE:@/tmp/.ICE-unix/1402,unix/ankledogg-Thin-GF63-12VE:/tmp/.ICE-unix/1402'), ('INVOCATION_ID', 'b3e6b0c8ef514463a4b773b1be251641'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/9c7d9bfe_f683_428f_a82f_6297791e8a25'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('TERMINATOR_DBUS_PATH', '/net/tenshu/Terminator2'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.132'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/opt/ros/foxy'), ('SHELL', '/bin/bash'), ('TERMINATOR_UUID', 'urn:uuid:f2a51279-a796-4595-8958-86834d4b5ae7'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/ankledogg/ydlidar_ros2_ws/build/ydlidar_ros2_driver'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/opt/ros/foxy/lib/python3.8/site-packages'), ('COLCON', '1'), ('VTE_VERSION', '6003'), ('CMAKE_PREFIX_PATH', '/opt/ros/foxy')]), 'shell': False}
[5.384237] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Install configuration: ""\n'}
[5.384445] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Execute custom install script\n'}
[5.384678] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_node\n'}
[5.389528] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/lib/ydlidar_ros2_driver/ydlidar_ros2_driver_client\n'}
[5.395047] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar.py\n'}
[5.400057] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar_launch.py\n'}
[5.404692] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/launch/ydlidar_launch_view.py\n'}
[5.409385] (-) TimerEvent: {}
[5.409539] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G1.yaml\n'}
[5.414140] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G2.yaml\n'}
[5.418609] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/G6.yaml\n'}
[5.423334] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/GS2.yaml\n'}
[5.427876] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/TEA.yaml\n'}
[5.432429] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/TG.yaml\n'}
[5.436895] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/TminiPro.yaml\n'}
[5.441770] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X2.yaml\n'}
[5.446352] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X3.yaml\n'}
[5.450989] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X4-Pro.yaml\n'}
[5.456406] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/X4.yaml\n'}
[5.461104] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/x3.yaml\n'}
[5.465682] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/ydlidar.yaml\n'}
[5.470243] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/params/ydlidar.yaml.save\n'}
[5.474866] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/startup/initenv.sh\n'}
[5.479535] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/startup/x3_test.py\n'}
[5.484232] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/config/ydlidar.rviz\n'}
[5.489003] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/config/ydlidar_x3.rviz\n'}
[5.493815] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/package_run_dependencies/ydlidar_ros2_driver\n'}
[5.498547] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/parent_prefix_path/ydlidar_ros2_driver\n'}
[5.503381] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/ament_prefix_path.sh\n'}
[5.508046] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/ament_prefix_path.dsv\n'}
[5.509542] (-) TimerEvent: {}
[5.512721] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/path.sh\n'}
[5.517350] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/environment/path.dsv\n'}
[5.522042] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.bash\n'}
[5.526918] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.sh\n'}
[5.531647] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.zsh\n'}
[5.536276] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/local_setup.dsv\n'}
[5.541258] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/package.dsv\n'}
[5.545974] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ament_index/resource_index/packages/ydlidar_ros2_driver\n'}
[5.550848] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/cmake/ydlidar_ros2_driverConfig.cmake\n'}
[5.555627] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/cmake/ydlidar_ros2_driverConfig-version.cmake\n'}
[5.560388] (ydlidar_ros2_driver) StdoutLine: {'line': b'-- Symlinking: /home/ankledogg/ydlidar_ros2_ws/install/ydlidar_ros2_driver/share/ydlidar_ros2_driver/package.xml\n'}
[5.566405] (ydlidar_ros2_driver) CommandEnded: {'returncode': 0}
[5.573951] (ydlidar_ros2_driver) JobEnded: {'identifier': 'ydlidar_ros2_driver', 'rc': 0}
[5.574256] (-) EventReactorShutdown: {}
